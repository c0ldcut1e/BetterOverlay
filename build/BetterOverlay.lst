         w __gthr_impl_key_create
02000000 T __init
02000024 000000a4 W abort
020000d8 00000024 T std::terminate()
020000fc 00000024 T std::unexpected()
02000120 00000034 W __gnu_cxx::__throw_concurrence_lock_error()
02000154 00000034 W __gnu_cxx::__throw_concurrence_unlock_error()
02000188 00000034 W __gnu_cxx::__throw_concurrence_broadcast_error()
020001bc 00000058 T __cxa_call_terminate
02000214 00000120 t _GLOBAL__sub_D_gCtxState
02000334 0000005c t _GLOBAL__sub_D__ZN9__gnu_cxx9__freeresEv
02000390 00000048 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
020003d8 0000026c t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
02000644 00000050 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
02000694 0000000c t register_fini
020006a0 t __do_global_dtors_aux
0200076c t frame_dummy
02000790 00000040 t ChildWindowComparer(void const*, void const*)
020007d0 00000234 t CalcWindowContentSizes(ImGuiWindow*, ImVec2*, ImVec2*)
02000a04 00000194 t CalcNextScrollFromScrollTargetAndClamp(ImGuiWindow*)
02000b98 00000064 t ImGui::NavApplyItemToResult(ImGuiNavItemData*)
02000bfc 0000001c t GetClipboardTextFn_DefaultImpl(void*)
02000c18 00000004 t SetPlatformImeDataFn_DefaultImpl(ImGuiViewport*, ImGuiPlatformImeData*)
02000c1c 00000018 t ImGui::ShowMetricsWindow(bool*)::Func::WindowComparerByBeginOrder(void const*, void const*)
02000c34 00000114 t GetResizeBorderRect(ImGuiWindow*, int, float, float)
02000d48 00000134 t ImGuiListClipper_SeekCursorForItem(ImGuiListClipper*, int)
02000e7c 00000004 t FreeWrapper(void*, void*)
02000e80 00000004 t MallocWrapper(unsigned int, void*)
02000e84 000000e8 t WindowSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void*, char const*)
02000f6c 0000002c t ImGui::NavUpdateAnyRequestFlag() [clone .part.0]
02000f98 0000002c t ImGui::GetKeyOwnerData(ImGuiContext*, ImGuiKey) [clone .part.0]
02000fc4 0000002c t ImGui::GetStyleVarInfo(int) [clone .part.0]
02000ff0 0000002c t ImGui::GetIO() [clone .part.0]
0200101c 0000002c t ImGui::SetActiveIdUsingAllKeyboardKeys() [clone .part.0]
02001048 0000002c t ImVector<char>::operator[](int) [clone .part.0]
02001074 0000002c t ImVector<ImFont*>::operator[](int) [clone .part.0]
020010a0 0000002c t ImVector<ImGuiListClipperRange>::operator[](int) [clone .part.0]
020010cc 0000002c t ImVector<ImGuiListClipperData>::operator[](int) [clone .part.0]
020010f8 0000002c t ImVector<unsigned int>::back() [clone .part.0]
02001124 0000002c t ImVector<ImGuiViewportP*>::operator[](int) [clone .part.0]
02001150 000000f4 t AddWindowToDrawData(ImGuiWindow*, int)
02001244 0000002c t ImVector<ImGuiWindow*>::operator[](int) [clone .part.0]
02001270 0000002c t ImGui::FindWindowFocusIndex(ImGuiWindow*) [clone .part.0]
0200129c 0000002c t ImVector<ImVec4>::back() [clone .part.0]
020012c8 0000002c t ImVector<ImDrawCmd>::back() [clone .part.0]
020012f4 0000002c t ImVector<ImGuiPopupData>::operator[](int) [clone .part.0]
02001320 0000002c t ImVector<ImGuiWindowStackData>::back() [clone .part.0]
0200134c 0000002c t ImVector<ImGuiPopupData>::back() [clone .part.0]
02001378 0000002c t ImVector<ImGuiWindow*>::back() [clone .part.0]
020013a4 0000002c t ImVector<int>::back() [clone .part.0]
020013d0 0000002c t ImVector<float>::back() [clone .part.0]
020013fc 0000002c t ImGui::PopID() [clone .part.0]
02001428 0000002c t ImVector<ImGuiGroupData>::back() [clone .part.0]
02001454 0000002c t ImVector<ImGuiGroupData>::pop_back() [clone .part.0]
02001480 0000002c t ImSpan<ImGuiTableColumn>::operator[](int) [clone .part.0]
020014ac 0000002c t ImVector<ImGuiStackLevelInfo>::operator[](int) [clone .part.0]
020014d8 0000002c t ImVector<ImGuiStorage::ImGuiStoragePair>::insert(ImGuiStorage::ImGuiStoragePair const*, ImGuiStorage::ImGuiStoragePair const&) [clone .part.0]
02001504 0000002c t ImVector<ImGuiTable>::operator[](int) [clone .part.0]
02001530 0000002c t ImGui::EndTooltip() [clone .part.0]
0200155c 0000002c t ImGui::BeginChild(unsigned int, ImVec2 const&, bool, int) [clone .part.0]
02001588 000000b0 t FindLatestInputEvent(ImGuiContext*, ImGuiInputEventType, int)
02001638 000000f0 t SetCurrentWindow(ImGuiWindow*)
02001728 00000070 t FindWindowNavFocusable(int, int, int)
02001798 00000180 t NavUpdateWindowingHighlightWindow(int)
02001918 00000210 t WindowSettingsHandler_ApplyAll(ImGuiContext*, ImGuiSettingsHandler*)
02001b28 00000210 t InitOrLoadWindowSettings(ImGuiWindow*, ImGuiWindowSettings*)
02001d38 000002c8 t CalcWindowSizeAfterConstraint(ImGuiWindow*, ImVec2 const&) [clone .isra.0]
02002000 00000108 t CalcResizePosSizeFromAnyCorner(ImGuiWindow*, ImVec2 const&, ImVec2 const&, ImVec2*, ImVec2*) [clone .isra.0]
02002108 00000150 t ImGui::SetWindowPos(ImGuiWindow*, ImVec2 const&, int) [clone .part.0]
02002258 000002b8 t CalcWindowAutoFitSize(ImGuiWindow*, ImVec2 const&)
02002510 0000045c t ImGui::NavScoreItem(ImGuiNavItemData*)
0200296c 000002b0 t ImGui::NavCalcPreferredRefPos()
02002c1c 00000120 t WindowSettingsHandler_ClearAll(ImGuiContext*, ImGuiSettingsHandler*)
02002d3c 00000134 t GetViewportBgFgDrawList(ImGuiViewportP*, unsigned int, char const*)
02002e70 000000c0 t ImGui::DebugLocateItemOnHover(unsigned int) [clone .part.0]
02002f30 0000021c t SetClipboardTextFn_DefaultImpl(void*, char const*)
0200314c 00000224 t AddWindowToSortBuffer(ImVector<ImGuiWindow*>*, ImGuiWindow*)
02003370 00000428 t UpdateWindowInFocusOrderList(ImGuiWindow*, bool, int)
02003798 0000038c t ImGui::RenderDimmedBackgroundBehindWindow(ImGuiWindow*, unsigned int) [clone .part.0]
02003b24 000001f4 W ImDrawList::~ImDrawList()
02003b24 000001f4 W ImDrawList::~ImDrawList()
02003d18 000000b8 W ImGuiKeyRoutingTable::~ImGuiKeyRoutingTable()
02003d18 000000b8 W ImGuiKeyRoutingTable::~ImGuiKeyRoutingTable()
02003dd0 000000e8 W ImGuiInputTextState::~ImGuiInputTextState()
02003dd0 000000e8 W ImGuiInputTextState::~ImGuiInputTextState()
02003eb8 00000228 T ImGuiStyle::ImGuiStyle()
02003eb8 00000228 T ImGuiStyle::ImGuiStyle()
020040e0 00000194 T ImGuiIO::ImGuiIO()
020040e0 00000194 T ImGuiIO::ImGuiIO()
02004274 0000019c T ImGuiIO::ClearInputKeys()
02004410 00000370 T ImGuiIO::AddMousePosEvent(float, float)
02004780 000002ac T ImGuiIO::AddMouseButtonEvent(int, bool)
02004a2c 000000a0 T ImLineClosestPoint(ImVec2 const&, ImVec2 const&, ImVec2 const&)
02004acc 000000b4 T ImTriangleContainsPoint(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&)
02004b80 0000007c T ImTriangleBarycentricCoords(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, float&, float&, float&)
02004bfc 00000164 T ImTriangleClosestPoint(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&)
02004d60 00000058 T ImStrncpy(char*, char const*, unsigned int)
02004db8 000000b8 T ImStrbolW(unsigned short const*, unsigned short const*)
02004e70 000003b0 T ImStristr(char const*, char const*, char const*, char const*)
02005220 00000120 T ImStrTrimBlanks(char*)
02005340 0000001c T ImStrSkipBlank(char const*)
0200535c 000000c4 T ImFormatString(char*, unsigned int, char const*, ...)
02005420 00000184 T ImFormatStringToTempBuffer(char const**, char const**, char const*, ...)
020055a4 00000154 T ImFormatStringToTempBufferV(char const**, char const**, char const*, __va_list_tag*)
020056f8 00000164 T ImHashStr(char const*, unsigned int, unsigned int)
0200585c 000000b4 T ImFileGetSize(__sFILE*)
02005910 0000020c T ImFileLoadToMemory(char const*, char const*, unsigned int*, int)
02005b1c 000001e4 T ImTextCharFromUtf8(unsigned int*, char const*, char const*)
02005d00 000000f0 T ImTextStrFromUtf8(unsigned short*, int, char const*, char const*, char const**)
02005df0 0000008c T ImTextCountCharsFromUtf8(char const*, char const*)
02005e7c 000000d0 T ImTextStrToUtf8(char*, int, unsigned short const*, unsigned short const*)
02005f4c 00000114 T ImTextCountUtf8BytesFromStr(unsigned short const*, unsigned short const*)
02006060 00000148 T ImAlphaBlendColors(unsigned int, unsigned int)
020061a8 00000164 T ImGui::ColorConvertFloat4ToU32(ImVec4 const&)
0200630c 000003f0 t ImGui::RenderWindowOuterBorders(ImGuiWindow*)
020066fc 00000098 T ImGui::ColorConvertRGBtoHSV(float, float, float, float&, float&, float&)
02006794 00000160 T ImGui::ColorConvertHSVtoRGB(float, float, float, float&, float&, float&)
020068f4 00000070 T ImGuiStorage::GetInt(unsigned int, int) const
02006964 00000078 T ImGuiStorage::GetVoidPtr(unsigned int) const
020069dc 00000170 t StackToolFormatLevelInfo(ImGuiStackTool*, int, bool, char*, unsigned int) [clone .isra.0]
02006b4c 00000280 T ImGuiStorage::GetIntRef(unsigned int, int)
02006dcc 0000028c T ImGuiStorage::SetInt(unsigned int, int)
02007058 0000028c T ImGuiStorage::SetVoidPtr(unsigned int, void*)
020072e4 00000430 T ImGuiTextFilter::ImGuiTextRange::split(char, ImVector<ImGuiTextFilter::ImGuiTextRange>*) const
02007714 00000230 T ImGuiTextFilter::Build()
02007944 000000a0 T ImGuiTextFilter::Draw(char const*, float)
020079e4 00000134 T ImGuiTextFilter::PassFilter(char const*, char const*) const
02007b18 000002d8 T ImGuiTextBuffer::append(char const*, char const*)
02007df0 00000360 T ImGuiTextBuffer::appendfv(char const*, __va_list_tag*)
02008150 00000080 T ImGuiTextBuffer::appendf(char const*, ...)
020081d0 00000398 T ImGuiTextIndex::append(char const*, int, int)
02008568 00000024 T ImGuiListClipper::ImGuiListClipper()
02008568 00000024 T ImGuiListClipper::ImGuiListClipper()
0200858c 00000044 T ImGui::GetStyle()
020085d0 00000064 T ImGui::GetColorU32(int, float)
02008634 00000058 T ImGui::GetColorU32(ImVec4 const&)
0200868c 00000018 T ImGui::GetStyleColorVec4(int)
020086a4 000000a0 T ImGui::GetColorU32(unsigned int)
02008744 00000284 T ImGui::PushStyleColor(int, unsigned int)
020089c8 00000210 T ImGui::PushStyleColor(int, ImVec4 const&)
02008bd8 000000e8 T ImGui::PopStyleColor(int)
02008cc0 00000264 T ImGui::PushStyleVar(int, float)
02008f24 00000240 T ImGui::PushStyleVar(int, ImVec2 const&)
02009164 0000014c T ImGui::PopStyleVar(int)
020092b0 0000004c T ImGui::GetStyleColorName(int)
020092fc 00000060 T ImGui::FindRenderedTextEnd(char const*, char const*)
0200935c 000001bc T ImGui::RenderFrame(ImVec2, ImVec2, unsigned int, bool, float)
02009518 0000015c T ImGui::RenderFrameBorder(ImVec2, ImVec2, float)
02009674 00000304 T ImGui::RenderNavHighlight(ImRect const&, unsigned int, int)
02009978 000003c4 T ImGui::RenderMouseCursor(ImVec2, float, int, unsigned int, unsigned int, unsigned int)
02009d3c 0000000c T ImGui::GetCurrentContext()
02009d48 000000e8 W ImGuiWindowTempData::~ImGuiWindowTempData()
02009d48 000000e8 W ImGuiWindowTempData::~ImGuiWindowTempData()
02009e30 000000ac T ImGuiWindow::GetIDFromRectangle(ImRect const&)
02009edc 000001a0 T ImGui::GcCompactTransientWindowBuffers(ImGuiWindow*)
0200a07c 00000204 T ImGui::GcAwakeTransientWindowBuffers(ImGuiWindow*)
0200a280 0000003c T ImGui::SetHoveredID(unsigned int)
0200a2bc 00000030 T ImGui::KeepAliveID(unsigned int)
0200a2ec 00000084 T ImGui::MarkItemEdited(unsigned int)
0200a370 00000090 T ImGui::IsWindowContentHoverable(ImGuiWindow*, int)
0200a400 00000330 T ImGui::IsItemHovered(int)
0200a730 00000088 T ImGui::IsClippedEx(ImRect const&, unsigned int)
0200a7b8 00000088 T ImGui::CalcWrapWidthForPos(ImVec2 const&, float)
0200a840 00000034 T ImGui::MemAlloc(unsigned int)
0200a874 0000003c T ImGui::MemFree(void*)
0200a8b0 00000080 T ImGuiTextFilter::ImGuiTextFilter(char const*)
0200a8b0 00000080 T ImGuiTextFilter::ImGuiTextFilter(char const*)
0200a930 0000002c T ImGui::GetClipboardText()
0200a95c 00000024 T ImGui::SetClipboardText(char const*)
0200a980 00000028 T ImGui::GetIO()
0200a9a8 00000044 T ImGui::GetDrawData()
0200a9ec 00000010 T ImGui::GetTime()
0200a9fc 00000010 T ImGui::GetFrameCount()
0200aa0c 0000003c T ImGui::GetBackgroundDrawList()
0200aa48 0000003c T ImGui::GetForegroundDrawList()
0200aa84 000005cc T ImGui::UpdateHoveredWindowAndCaptureFlags()
0200b050 00000094 T ImGui::PushClipRect(ImVec2 const&, ImVec2 const&, bool)
0200b0e4 00000084 T ImGui::PopClipRect()
0200b168 0000013c T ImGui::CalcTextSize(char const*, char const*, bool, float)
0200b2a4 00000338 T ImGui::RenderTextClippedEx(ImDrawList*, ImVec2 const&, ImVec2 const&, char const*, char const*, ImVec2 const*, ImVec2 const&, ImRect const*)
0200b5dc 00000030 T ImGui::IsItemActive()
0200b60c 00000044 T ImGui::IsItemActivated()
0200b650 0000005c T ImGui::IsItemDeactivated()
0200b6ac 00000070 T ImGui::IsItemDeactivatedAfterEdit()
0200b71c 0000002c T ImGui::IsItemFocused()
0200b748 00000014 T ImGui::IsItemToggledOpen()
0200b75c 0000002c T ImGui::IsAnyItemHovered()
0200b788 00000014 T ImGui::IsItemVisible()
0200b79c 00000014 T ImGui::IsItemEdited()
0200b7b0 00000018 T ImGui::SetNextItemAllowOverlap()
0200b7c8 00000070 T ImGui::SetActiveIdUsingAllKeyboardKeys()
0200b838 00000014 T ImGui::GetItemRectMin()
0200b84c 00000014 T ImGui::GetItemRectMax()
0200b860 0000003c T ImGui::GetItemRectSize()
0200b89c 00000144 T ImGui::FindWindowByName(char const*)
0200b9e0 00000064 T ImGui::CalcWindowNextAutoFitSize(ImGuiWindow*)
0200ba44 000000d4 T ImGui::UpdateWindowParentAndRootLinks(ImGuiWindow*, int, ImGuiWindow*)
0200bb18 000000a0 T ImGui::FindBlockingModal(ImGuiWindow*)
0200bbb8 00000164 T ImGui::BringWindowToFocusFront(ImGuiWindow*)
0200bd1c 00000164 T ImGui::BringWindowToDisplayFront(ImGuiWindow*)
0200be80 00000128 T ImGui::FindWindowDisplayIndex(ImGuiWindow*)
0200bfa8 000000f4 T ImGui::FindBottomMostVisibleWindowWithinBeginStack(ImGuiWindow*)
0200c09c 00000134 T ImGui::BringWindowToDisplayBehind(ImGuiWindow*, ImGuiWindow*)
0200c1d0 00000150 T ImGui::SetCurrentFont(ImFont*)
0200c320 000001f0 T ImGui::PushFont(ImFont*)
0200c510 000000d0 T ImGui::PopFont()
0200c5e0 000001fc T ImGui::PushItemFlag(int, bool)
0200c7dc 00000060 T ImGui::PopItemFlag()
0200c83c 00000200 T ImGui::BeginDisabled(bool)
0200ca3c 000000d4 T ImGui::EndDisabled()
0200cb10 00000010 T ImGui::PushTabStop(bool)
0200cb20 00000060 T ImGui::PopTabStop()
0200cb80 0000000c T ImGui::PushButtonRepeat(bool)
0200cb8c 00000060 T ImGui::PopButtonRepeat()
0200cbec 000001cc T ImGui::PushTextWrapPos(float)
0200cdb8 00000050 T ImGui::PopTextWrapPos()
0200ce08 00000090 T ImGui::IsWindowChildOf(ImGuiWindow*, ImGuiWindow*, bool)
0200ce98 000000c8 T ImGui::IsWindowAbove(ImGuiWindow*, ImGuiWindow*)
0200cf60 00000230 T ImGui::IsWindowHovered(int)
0200d190 00000128 T ImGui::IsWindowFocused(int)
0200d2b8 00000014 T ImGui::GetWindowWidth()
0200d2cc 00000018 T ImGui::GetWindowPos()
0200d2e4 00000018 T ImGui::GetWindowSize()
0200d2fc 000001a4 T ImGui::SetWindowSize(ImGuiWindow*, ImVec2 const&, int)
0200d4a0 00000018 T ImGui::SetWindowSize(ImVec2 const&, int)
0200d4b8 000000b4 T ImGui::SetNextWindowPos(ImVec2 const&, int, ImVec2 const&)
0200d56c 00000094 T ImGui::SetNextWindowSize(ImVec2 const&, int)
0200d600 00000048 T ImGui::SetNextWindowSizeConstraints(ImVec2 const&, ImVec2 const&, void (*)(ImGuiSizeCallbackData*), void*)
0200d648 0000008c T ImGui::SetNextWindowContentSize(ImVec2 const&)
0200d6d4 00000028 T ImGui::SetNextWindowScroll(ImVec2 const&)
0200d6fc 0000001c T ImGui::SetNextWindowBgAlpha(float)
0200d718 0000001c T ImGui::GetWindowDrawList()
0200d734 00000010 T ImGui::GetFont()
0200d744 00000010 T ImGui::GetFontSize()
0200d754 00000014 T ImGui::GetFontTexUvWhitePixel()
0200d768 00000080 T ImGui::SetWindowFontScale(float)
0200d7e8 00000074 T ImGui::PopFocusScope()
0200d85c 00000034 T ImGui::PopID()
0200d890 00000064 T ImGui::IsRectVisible(ImVec2 const&, ImVec2 const&)
0200d8f4 000000dc T ImGui::GetKeyData(ImGuiContext*, ImGuiKey)
0200d9d0 00000404 T ImGuiIO::AddKeyAnalogEvent(ImGuiKey, bool, float)
0200ddd4 0000002c T ImGuiIO::AddKeyEvent(ImGuiKey, bool)
0200de00 00000128 T ImGui::GetKeyName(ImGuiKey)
0200df28 00000174 T ImGui::GetKeyChordName(int, char*, int)
0200e09c 000000ac T ImGui::CalcTypematicRepeatAmount(float, float, float, float)
0200e148 000000bc T ImGui::GetKeyMagnitude2d(ImGuiKey, ImGuiKey, ImGuiKey, ImGuiKey)
0200e204 00000384 T ImGui::GetShortcutRoutingData(int)
0200e588 000001bc T ImGui::SetShortcutRouting(int, unsigned int, int)
0200e744 0000013c T ImGui::IsMouseHoveringRect(ImVec2 const&, ImVec2 const&, bool)
0200e880 00000074 T ImGui::IsMouseDragPastThreshold(int, float)
0200e8f4 00000088 T ImGui::IsMouseDragging(int, float)
0200e97c 00000014 T ImGui::GetMousePos()
0200e990 0000008c T ImGui::IsMousePosValid(ImVec2 const*)
0200ea1c 00000120 T ImGui::GetMouseDragDelta(int, float)
0200eb3c 00000058 T ImGui::ResetMouseDragDelta(int)
0200eb94 00000010 T ImGui::GetMouseCursor()
0200eba4 00000010 T ImGui::SetMouseCursor(int)
0200ebb4 00000010 T ImGui::SetNextFrameWantCaptureKeyboard(bool)
0200ebc4 00000010 T ImGui::SetNextFrameWantCaptureMouse(bool)
0200ebd4 0000022c T ImGui::TestKeyOwner(ImGuiKey, unsigned int)
0200ee00 000000ec T ImGui::IsKeyDown(ImGuiKey, unsigned int)
0200eeec 000000a0 t GetMergedModsFromKeys()
0200ef8c 00000220 T ImGui::IsKeyPressed(ImGuiKey, unsigned int, int)
0200f1ac 0000000c T ImGui::IsKeyPressed(ImGuiKey, bool)
0200f1b8 00000100 T ImGui::IsKeyReleased(ImGuiKey, unsigned int)
0200f2b8 00000060 T ImGui::IsMouseDown(int)
0200f318 0000005c T ImGui::IsMouseDown(int, unsigned int)
0200f374 00000104 T ImGui::IsMouseClicked(int, unsigned int, int)
0200f478 0000000c T ImGui::IsMouseClicked(int, bool)
0200f484 00000060 T ImGui::IsMouseReleased(int)
0200f4e4 0000005c T ImGui::IsMouseReleased(int, unsigned int)
0200f540 00000064 T ImGui::IsMouseDoubleClicked(int)
0200f5a4 000000bc T ImGui::IsItemClicked(int)
0200f660 000000f0 T ImGui::IsKeyDown(ImGuiKey)
0200f750 00000208 T ImGui::SetKeyOwner(ImGuiKey, unsigned int, int)
0200f958 00000108 T ImGui::SetKeyOwnersForKeyChord(int, unsigned int, int)
0200fa60 00000154 T ImGui::Shortcut(int, unsigned int, int)
0200fbb4 0000018c T ImGui::DebugCheckVersionAndDataLayout(char const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
0200fd40 000000a8 T ImGui::ErrorCheckUsingSetCursorPosToExtendParentBoundaries()
0200fde8 00000208 T ImGuiStackSizes::CompareWithContextState(ImGuiContext*)
0200fff0 000000e4 T ImGui::SameLine(float, float)
020100d4 000001ac T ImGui::ItemSize(ImVec2 const&, float)
02010280 00000244 t ImGui::DebugTextEncoding(char const*) [clone .part.0]
020104c4 00000018 T ImGui::GetCursorScreenPos()
020104dc 0000002c T ImGui::SetCursorScreenPos(ImVec2 const&)
02010508 00000050 T ImGui::GetCursorPos()
02010558 00000024 T ImGui::GetCursorPosX()
0201057c 00000030 T ImGui::SetCursorPosX(float)
020105ac 00000040 T ImGui::GetCursorStartPos()
020105ec 0000004c T ImGui::Indent(float)
02010638 0000004c T ImGui::Unindent(float)
02010684 0000001c T ImGui::SetNextItemWidth(float)
020106a0 000001f8 T ImGui::PushItemWidth(float)
02010898 000004bc T ImGui::PushMultiItemsWidths(int, float)
02010d54 00000050 T ImGui::PopItemWidth()
02010da4 00000104 T ImGui::CalcItemWidth()
02010ea8 000001ac T ImGui::CalcItemSize(ImVec2, float, float)
02011054 00000010 T ImGui::GetTextLineHeight()
02011064 00000018 T ImGui::GetTextLineHeightWithSpacing()
0201107c 00000020 T ImGui::GetFrameHeight()
0201109c 00000028 T ImGui::GetFrameHeightWithSpacing()
020110c4 00000068 T ImGui::GetContentRegionAvail()
0201112c 00000040 T ImGui::GetWindowContentRegionMax()
0201116c 00000288 T ImGui::BeginGroup()
020113f4 00000794 T ImGui::ScrollToRectEx(ImGuiWindow*, ImRect const&, int)
02011b88 00000124 T ImGui::SetItemDefaultFocus()
02011cac 00000014 T ImGui::GetScrollX()
02011cc0 00000014 T ImGui::GetScrollY()
02011cd4 00000014 T ImGui::GetScrollMaxX()
02011ce8 00000014 T ImGui::GetScrollMaxY()
02011cfc 00000018 T ImGui::SetScrollY(ImGuiWindow*, float)
02011d14 00000024 T ImGui::SetScrollX(float)
02011d38 00000024 T ImGui::SetScrollY(float)
02011d5c 000000b4 T ImGui::SetScrollFromPosX(ImGuiWindow*, float, float)
02011e10 000000c0 T ImGui::SetScrollFromPosX(float, float)
02011ed0 000000c0 T ImGui::SetScrollFromPosY(float, float)
02011f90 00000110 T ImGui::SetScrollHereX(float)
020120a0 00000114 T ImGui::SetScrollHereY(float)
020121b4 00000154 T ImGui::IsPopupOpen(unsigned int, int)
02012308 00000064 T ImGui::GetTopMostAndVisiblePopupModal()
0201236c 000003c4 T ImGui::FindBestWindowPosForPopupEx(ImVec2 const&, ImVec2 const&, int*, ImRect const&, ImRect const&, ImGuiPopupPositionPolicy)
02012730 000000d4 T ImGui::GetPopupAllowedExtentRect(ImGuiWindow*)
02012804 000002cc T ImGui::FindBestWindowPosForPopup(ImGuiWindow*)
02012ad0 00000068 T ImGui::NavClearPreferredPosForAxis(ImGuiAxis)
02012b38 000000ec T ImGui::SetNavID(unsigned int, ImGuiNavLayer, unsigned int, ImRect const&)
02012c24 00000038 T ImGui::NavUpdateCurrentWindowIsScrollPushableX()
02012c5c 00000034 T ImGui::NavMoveRequestButNoResultYet()
02012c90 00000104 T ImGui::NavMoveRequestSubmit(int, int, int, int)
02012d94 00000098 T ImGui::NavMoveRequestResolveWithLastItem(ImGuiNavItemData*)
02012e2c 00000090 T ImGui::NavMoveRequestResolveWithPastTreeNode(ImGuiNavItemData*, ImGuiNavTreeNodeData*)
02012ebc 00000040 T ImGui::NavMoveRequestCancel()
02012efc 00000094 T ImGui::NavMoveRequestForward(int, int, int, int)
02012f90 000001e4 T ImGui::GetNavTweakPressedAmount(ImGuiAxis)
02013174 000000d8 T ImGui::ClearDragDrop()
0201324c 000003f4 T ImGui::SetDragDropPayload(char const*, void const*, unsigned int, int)
02013640 0000016c T ImGui::BeginDragDropTarget()
020137ac 00000270 T ImGui::AcceptDragDropPayload(char const*, int)
02013a1c 00000098 T ImGui::EndDragDropTarget()
02013ab4 000001ec T ImGui::LogText(char const*, ...)
02013ca0 00000290 T ImGui::LogRenderedText(ImVec2 const*, char const*, char const*)
02013f30 000001c4 T ImGui::RenderText(ImVec2, char const*, char const*, bool)
020140f4 00000148 T ImGui::RenderTextWrapped(ImVec2, char const*, char const*, float)
0201423c 00000134 T ImGui::RenderTextClipped(ImVec2 const&, ImVec2 const&, char const*, char const*, ImVec2 const*, ImVec2 const&, ImRect const*)
02014370 000004d0 T ImGui::RenderTextEllipsis(ImDrawList*, ImVec2 const&, ImVec2 const&, float, float, char const*, char const*, ImVec2 const*)
02014840 000000f4 T ImGui::LogBegin(ImGuiLogType, int)
02014934 00000014 T ImGui::LogSetNextTextDecoration(char const*, char const*)
02014948 00000050 T ImGui::LogToTTY(int)
02014998 000000d4 T ImGui::LogToFile(int, char const*)
02014a6c 00000020 T ImGui::LogToClipboard(int)
02014a8c 000001b8 T ImGui::LogFinish()
02014c44 00000218 T ImGui::End()
02014e5c 0000002c T ImGui::EndTooltip()
02014e88 0000010c T ImGui::EndPopup()
02014f94 00000104 T ImGui::EndDragDropSource()
02015098 0000002c T ImGui::MarkIniSettingsDirty()
020150c4 00000338 T ImGui::AddSettingsHandler(ImGuiSettingsHandler const*)
020153fc 00000548 T ImGui::Initialize()
02015944 00000168 T ImGui::FindSettingsHandler(char const*)
02015aac 00000108 T ImGui::ClearIniSettings()
02015bb4 000004ec T ImGui::LoadIniSettingsFromMemory(char const*, unsigned int)
020160a0 000000a0 T ImGui::LoadIniSettingsFromDisk(char const*)
02016140 00000320 T ImGui::SaveIniSettingsToMemory(unsigned int*)
02016460 000000a0 T ImGui::SaveIniSettingsToDisk(char const*)
02016500 00000204 T ImGui::CreateNewWindowSettings(char const*)
02016704 000000f8 T ImGui::FindWindowSettingsByID(unsigned int)
020167fc 0000015c t WindowSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, char const*)
02016958 00000068 T ImGui::FindWindowSettingsByWindow(ImGuiWindow*)
020169c0 000003b8 t WindowSettingsHandler_WriteAll(ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*)
02016d78 00000030 T ImGui::GetMainViewport()
02016da8 000006a8 T ImGui::DebugRenderViewportThumbnail(ImDrawList*, ImGuiViewportP*, ImRect const&)
02017450 000003ec T ImGui::DebugRenderKeyboardPreview(ImDrawList*)
0201783c 00000160 T ImGui::DebugNodeColumns(ImGuiOldColumns*)
0201799c 000004b0 T ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox(ImDrawList*, ImDrawList const*, ImDrawCmd const*, bool, bool)
02017e4c 000000ac T ImGui::DebugNodeFontGlyph(ImFont*, ImFontGlyph const*)
02017ef8 00000104 T ImGui::DebugNodeStorage(ImGuiStorage*, char const*)
02017ffc 000000c0 T ImGui::DebugNodeWindowSettings(ImGuiWindowSettings*)
020180bc 00000150 T ImGui::DebugLogV(char const*, __va_list_tag*)
0201820c 00000084 T ImGui::DebugLog(char const*, ...)
02018290 0000018c T ImGuiListClipper::End()
0201841c 00000020 T ImGuiListClipper::~ImGuiListClipper()
0201841c 00000020 T ImGuiListClipper::~ImGuiListClipper()
0201843c 000002d4 T ImGui::SetActiveID(unsigned int, ImGuiWindow*)
02018710 0000000c T ImGui::ClearActiveID()
0201871c 000002f0 T ImGui::ItemHoverable(ImRect const&, unsigned int, int)
02018a0c 00000148 t LockWheelingWindow(ImGuiWindow*, float)
02018b54 00000c00 T ImGui::UpdateInputEvents(bool)
02019754 000000e0 T ImGui::SetNavWindow(ImGuiWindow*)
02019834 00000174 T ImGui::SetFocusID(unsigned int, ImGuiWindow*)
020199a8 000001fc T ImGui::SetKeyboardFocusHere(int)
02019ba4 000001dc T ImGui::NavInitWindow(ImGuiWindow*, bool)
02019d80 0000010c t ImGui::NavRestoreLayer(ImGuiNavLayer)
02019e8c 000000e0 T ImGui::NavInitRequestApplyResult()
02019f6c 00000500 T ImGui::NavMoveRequestApplyResult()
0201a46c 000003cc T ImGuiListClipper::Begin(int, float)
0201a838 00000314 T ImGui::FocusWindow(ImGuiWindow*, int)
0201ab4c 0000010c T ImGui::StartMouseMovingWindow(ImGuiWindow*)
0201ac58 00000160 T ImGui::UpdateMouseMovingWindowNewFrame()
0201adb8 00000184 T ImGui::FocusTopMostWindowUnderOne(ImGuiWindow*, ImGuiWindow*, ImGuiViewport*, int)
0201af3c 000002b4 T ImGui::ClosePopupToLevel(int, bool)
0201b1f0 00000154 T ImGui::ClosePopupsOverWindow(ImGuiWindow*, bool)
0201b344 00000294 T ImGui::UpdateMouseMovingWindowEndFrame()
0201b5d8 00002b78 t ImGui::NavUpdate()
0201e150 00000104 T ImGui::CloseCurrentPopup()
0201e254 000003dc T ImGui::OpenPopupEx(unsigned int, int)
0201e630 00000060 T ImGui::DebugLocateItemOnHover(unsigned int)
0201e690 0000016c T ImGui::DebugLocateItemResolveWithLastItem()
0201e7fc 00000a9c T ImGui::ItemAdd(ImRect const&, unsigned int, ImRect const*, int)
0201f298 00000424 T ImGui::EndGroup()
0201f6bc 0000032c T ImGui::EndChild()
0201f9e8 00000004 T ImGui::EndChildFrame()
0201f9ec 000004d4 T ImGui::DebugHookIdInfo(unsigned int, int, void const*, void const*)
0201fec0 000000c0 T ImGuiWindow::GetID(char const*, char const*)
0201ff80 00000390 T ImGuiWindow::ImGuiWindow(ImGuiContext*, char const*)
0201ff80 00000390 T ImGuiWindow::ImGuiWindow(ImGuiContext*, char const*)
02020310 0000045c t CreateNewWindow(char const*, int)
0202076c 000001b4 T ImGui::PushID(char const*)
02020920 00000084 T ImGui::IsPopupOpen(char const*, int)
020209a4 000000b0 T ImGui::OpenPopup(char const*, int)
02020a54 00000140 T ImGui::OpenPopupOnItemClick(char const*, int)
02020b94 0000031c T ImGui::LogButtons()
02020eb0 000000b8 T ImGuiWindow::GetID(void const*)
02020f68 000001b0 T ImGui::PushID(void const*)
02021118 00000014 T ImGui::GetID(void const*)
0202112c 000006dc T ImGui::DebugNodeTabBar(ImGuiTabBar*, char const*)
02021808 000000b8 T ImGuiWindow::GetID(int)
020218c0 000001b0 T ImGui::PushID(int)
02021a70 00000e04 t ImGui::UpdateWindowManualResize(ImGuiWindow*, ImVec2 const&, int*, int, unsigned int*, ImRect const&) [clone .constprop.0]
02022874 00003e1c T ImGui::Begin(char const*, bool*, int)
02026690 0000044c T ImGui::BeginChildEx(char const*, unsigned int, ImVec2 const&, bool, int)
02026adc 00000088 T ImGui::BeginChild(char const*, ImVec2 const&, bool, int)
02026b64 00000030 T ImGui::BeginChild(unsigned int, ImVec2 const&, bool, int)
02026b94 000000c4 T ImGui::BeginChildFrame(unsigned int, ImVec2 const&, int)
02026c58 000001f4 T ImGui::BeginTooltipEx(int, int)
02026e4c 0000000c T ImGui::BeginTooltip()
02026e58 00000458 T ImGui::BeginDragDropSource(int)
020272b0 00000044 T ImGui::BeginItemTooltip()
020272f4 00000238 t MetricsHelpMarker(char const*)
0202752c 00000790 T ImGui::DebugNodeFont(ImFont*)
02027cbc 00000388 T ImGui::ShowFontAtlas(ImFontAtlas*)
02028044 000000c0 T ImGui::SetTooltip(char const*, ...)
02028104 00000b6c T ImGui::EndFrame()
02028c70 00000b0c T ImGui::Render()
0202977c 000000e4 T ImGui::SetItemTooltip(char const*, ...)
02029860 00002f10 T ImGui::NewFrame()
0202c770 0000011c T ImGui::BeginPopupEx(unsigned int, int)
0202c88c 00000064 T ImGui::BeginPopup(char const*, int)
0202c8f0 000000d8 T ImGui::BeginPopupContextItem(char const*, int)
0202c9c8 000000c8 T ImGui::BeginPopupContextWindow(char const*, int)
0202ca90 00000180 T ImGui::BeginPopupModal(char const*, bool*, int)
0202cc10 000001ec T ImGui::PushOverrideID(unsigned int)
0202cdfc 000000b8 T ImGui::GetIDWithSeed(char const*, char const*, unsigned int)
0202ceb4 00000094 T ImGui::GetIDWithSeed(int, unsigned int)
0202cf48 000000a8 T ImGui::GetID(char const*)
0202cff0 00000530 T ImGui::ShowStackToolWindow(bool*)
0202d520 000002d8 W ImPool<ImGuiTable>::~ImPool()
0202d520 000002d8 W ImPool<ImGuiTable>::~ImPool()
0202d7f8 00000270 W ImPool<ImGuiTabBar>::~ImPool()
0202d7f8 00000270 W ImPool<ImGuiTabBar>::~ImPool()
0202da68 00000bec T ImGui::CreateContext(ImFontAtlas*)
0202e654 00000200 W ImVector<ImGuiListClipperRange>::push_back(ImGuiListClipperRange const&)
0202e854 000012a8 T ImGuiListClipper::Step()
0202fafc 00000858 T ImGui::DebugNodeDrawList(ImGuiWindow*, ImGuiViewportP*, ImDrawList const*, char const*)
02030354 0000017c T ImGui::DebugNodeViewport(ImGuiViewportP*)
020304d0 00000764 T ImGui::DebugNodeWindow(ImGuiWindow*, char const*)
02030c34 00000244 t ImGui::DebugNodeWindowsList(ImVector<ImGuiWindow*>*, char const*) [clone .part.0]
02030e78 00000144 T ImGui::DebugNodeWindowsListByBeginStackParent(ImGuiWindow**, int, ImGuiWindow*)
02030fbc 0000068c T ImGui::ShowDebugLogWindow(bool*)
02031648 0000383c T ImGui::ShowMetricsWindow(bool*)
02034e84 00000014 t ShowDemoWindowWidgets()::Funcs::ItemGetter(void*, int, char const**)
02034e98 00000044 t ShowDemoWindowWidgets()::TextFilters::FilterCasingSwap(ImGuiInputTextCallbackData*)
02034edc 00000020 t ShowDemoWindowWidgets()::Funcs::Saw(void*, int)
02034efc 0000006c t ShowExampleAppConstrainedResize(bool*)::CustomConstraints::AspectRatio(ImGuiSizeCallbackData*)
02034f68 00000024 t ShowExampleAppConstrainedResize(bool*)::CustomConstraints::Square(ImGuiSizeCallbackData*)
02034f8c 000000a0 t ShowExampleAppConstrainedResize(bool*)::CustomConstraints::Step(ImGuiSizeCallbackData*)
0203502c 00000030 t __tcf_ZZL20ShowDemoWindowTablesvE5items_0
0203505c 00000030 t __tcf_ZZL20ShowDemoWindowTablesvE5items
0203508c 00000030 t __tcf_ZZL22ShowExampleAppLongTextPbE3log
020350bc 00000030 t __tcf_ZZL21ShowDemoWindowWidgetsvE6my_str
020350ec 00000030 t __tcf_ZZL29ShowExampleAppCustomRenderingPbE6points
0203511c 00000030 t __tcf_ZZL21ShowDemoWindowWidgetsvE11active_tabs
0203514c 00000030 t __tcf_ZZL20ShowDemoWindowTablesvE9selection
0203517c 0000005c t __tcf_ZZL17ShowExampleAppLogPbE3log
020351d8 00000030 t __tcf_ZZL21ShowDemoWindowWidgetsvE6filter
02035208 00000030 t __tcf_ZZN5ImGui15ShowStyleEditorEP10ImGuiStyleE6filter
02035238 00000030 t __tcf_ZZL23ShowExampleAppDocumentsPbE3app
02035268 00000030 t __tcf_ZZL23ShowExampleAppDocumentsPbE11close_queue
02035298 000000e8 t PushStyleCompact()
02035380 0000022c t ShowPlaceholderObject(char const*, int)
020355ac 000005cc t ShowExampleMenuFile()
02035b78 0000003c t ShowDemoWindowWidgets()::Funcs::Sin(void*, int)
02035bb4 00000044 t ShowDemoWindowWidgets()::TextFilters::FilterImGuiLetters(ImGuiInputTextCallbackData*)
02035bf8 00000238 t EditTableSizingFlags(int*)
02035e30 0000002c t ImVector<(anonymous namespace)::MyItem>::operator[](int) [clone .part.0]
02035e5c 000001a8 t (anonymous namespace)::MyItem::CompareWithSortSpecs(void const*, void const*)
02036004 00000140 t ShowDemoWindowWidgets()::Funcs::MyCallback(ImGuiInputTextCallbackData*)
02036144 0000002c t ExampleAppConsole::Strdup(char const*) [clone .part.0]
02036170 0000002c t ImVector<char>::front() const [clone .part.0]
0203619c 0000002c t ImVector<char*>::operator[](int) [clone .part.0]
020361c8 0000002c t ImVector<ImVec2>::operator[](int) [clone .part.0]
020361f4 00000154 t ShowDemoWindowWidgets()::Funcs::MyResizeCallback(ImGuiInputTextCallbackData*)
02036348 000000f4 t __tcf_ZZL21ShowExampleAppConsolePbE7console
0203643c 00000798 t ShowDemoWindowTables()::MyTreeNode::DisplayNode(MyTreeNode const*, MyTreeNode const*) [clone .constprop.0]
02036bd4 000002f8 t EditTableColumnsFlags(int*)
02036ecc 00000bf4 t ShowDemoWindowColumns()
02037ac0 00000e80 t ShowDemoWindowPopups()
02038940 000018e4 t ShowExampleAppCustomRendering(bool*) [clone .constprop.0]
0203a224 000032b8 t ShowDemoWindowLayout()
0203d4dc 00001014 t ShowDemoWindowInputs()
0203e4f0 00007f54 t ShowDemoWindowWidgets()
02046444 00006070 t ShowDemoWindowTables()
0204c4b4 00000610 T ImGui::ShowAboutWindow(bool*)
0204cac4 000001b4 T ImGui::ShowFontSelector(char const*)
0204cc78 000000a8 T ImGui::ShowStyleSelector(char const*)
0204cd20 000016d0 T ImGui::ShowStyleEditor(ImGuiStyle*)
0204e3f0 00000188 T ImGui::ShowUserGuide()
0204e578 000001b4 W ExampleAppConsole::AddLog(char const*, ...)
0204e72c 00000450 W ExampleAppConsole::ExampleAppConsole()
0204e72c 00000450 W ExampleAppConsole::ExampleAppConsole()
0204eb7c 00000640 W ExampleAppConsole::TextEditCallbackStub(ImGuiInputTextCallbackData*)
0204f1bc 000004f0 W ExampleAppConsole::ExecCommand(char const*)
0204f6ac 000007c0 W ExampleAppConsole::Draw(char const*, bool*)
0204fe6c 00000208 W ExampleAppLog::AddLog(char const*, ...)
02050074 000004f8 W ExampleAppLog::Draw(char const*, bool*)
0205056c 000000c0 W MyDocument::DisplayContextMenu(MyDocument*)
0205062c 000006f4 W ExampleAppDocuments::ExampleAppDocuments()
0205062c 000006f4 W ExampleAppDocuments::ExampleAppDocuments()
02050d20 00000b34 t ShowExampleAppDocuments(bool*) [clone .constprop.0]
02051854 00002d30 T ImGui::ShowDemoWindow(bool*)
02054584 00000030 t rect_original_order(void const*, void const*)
020545b4 00000084 t stbtt__find_table(unsigned char*, unsigned int, char const*)
02054638 000000c4 t stbtt__close_shape(stbtt_vertex*, int, int, int, int, int, int, int, int, int)
020546fc 000000b4 t stbtt__track_vertex(stbtt__csctx*, int, int)
020547b0 00000158 t stbtt__csctx_rccurve_to(stbtt__csctx*, float, float, float, float, float, float)
02054908 00000274 t stbtt__sort_edges_quicksort(stbtt__edge*, int)
02054b7c 000000dc t stbtt__GetGlyfOffset(stbtt_fontinfo const*, int)
02054c58 00000214 t stbtt__tesselate_cubic(stbtt__point*, int*, float, float, float, float, float, float, float, float, float, int)
02054e6c 00000050 t rect_height_compare(void const*, void const*)
02054ebc 0000002c t FixRectCornerFlags(int) [clone .part.0]
02054ee8 000000c0 t stb__match(unsigned char const*, unsigned int)
02054fa8 0000002c t stbtt__buf_seek(stbtt__buf*, int) [clone .part.0]
02054fd4 000002cc t stbtt__handle_clipped_edge(float*, int, stbtt__active_edge*, float, float, float, float) [clone .part.0]
020552a0 0000009c t stb__lit(unsigned char const*, unsigned int)
0205533c 0000002c t ImVector<ImFontAtlasCustomRect>::operator[](int) [clone .part.0]
02055368 0000002c t ImFontAtlas::GetCustomRectByIndex(int) [clone .part.0]
02055394 0000002c t ImVector<unsigned short>::operator[](int) [clone .part.0]
020553c0 0000002c t ImVector<ImVec2>::back() [clone .part.0]
020553ec 0000002c t ImVector<ImDrawCmd>::back() [clone .part.0]
02055418 0000002c t ImVector<float>::operator[](int) [clone .part.0]
02055444 0000002c t ImVector<ImFontGlyph>::back() [clone .part.0]
02055470 0000038c t ImFontAtlasBuildRenderLinesTexData(ImFontAtlas*)
020557fc 000001b4 t stbtt__tesselate_curve(stbtt__point*, int*, float, float, float, float, float, float, float, int) [clone .isra.0]
020559b0 00000380 t stbtt_FindGlyphIndex.isra.0
02055d30 00000130 t stbrp__skyline_find_min_y(stbrp_context*, stbrp_node*, int, int, int*) [clone .isra.0]
02055e60 00000604 t stbrp_pack_rects.isra.0
02056464 000000b4 t stbtt__csctx_rline_to(stbtt__csctx*, float, float)
02056518 000000b8 t stbtt__csctx_close_shape(stbtt__csctx*)
020565d0 000000e0 t stbtt__csctx_rmove_to(stbtt__csctx*, float, float)
020566b0 00000168 t stbtt__cff_index_get(stbtt__buf, int)
02056818 0000019c t stbtt__cff_get_index(stbtt__buf*)
020569b4 00000148 t stbtt__cff_int(stbtt__buf*)
02056afc 0000093c t stbtt__fill_active_edges_new(float*, float*, int, stbtt__active_edge*, float)
02057438 00000288 t PathBezierQuadraticCurveToCasteljau(ImVector<ImVec2>*, float, float, float, float, float, float, float, int)
020576c0 00000284 t PathBezierCubicCurveToCasteljau(ImVector<ImVec2>*, float, float, float, float, float, float, float, float, float, int)
02057944 000001b4 t stbtt__dict_get(stbtt__buf*, int)
02057af8 00000180 t stbtt__get_subrs(stbtt__buf, stbtt__buf)
02057c78 00000f00 t stbtt__run_charstring(stbtt_fontinfo const*, int, stbtt__csctx*)
02058b78 00000100 t stbtt__GetGlyphShapeT2(stbtt_fontinfo const*, int, stbtt_vertex**)
02058c78 00000b3c t stbtt__GetGlyphShapeTT(stbtt_fontinfo const*, int, stbtt_vertex**)
020597b4 00000470 t stbtt_GetGlyphBitmapBoxSubpixel.constprop.0
02059c24 000006ac T ImGui::StyleColorsDark(ImGuiStyle*)
0205a2d0 000006ac T ImGui::StyleColorsClassic(ImGuiStyle*)
0205a97c 00000698 T ImGui::StyleColorsLight(ImGuiStyle*)
0205b014 000000dc T ImDrawListSharedData::ImDrawListSharedData()
0205b014 000000dc T ImDrawListSharedData::ImDrawListSharedData()
0205b0f0 00000174 T ImDrawListSharedData::SetCircleTessellationMaxError(float)
0205b264 0000019c T ImDrawList::AddDrawCmd()
0205b400 00000048 T ImDrawList::_PopUnusedDrawCmd()
0205b448 00000168 T ImDrawList::_OnChangedClipRect()
0205b5b0 00000110 T ImDrawList::_OnChangedTextureID()
0205b6c0 00000070 T ImDrawList::_OnChangedVtxOffset()
0205b730 000000e0 T ImDrawList::_CalcCircleAutoSegmentCount(float) const
0205b810 00000214 T ImDrawList::PushClipRect(ImVec2 const&, ImVec2 const&, bool)
0205ba24 000000a8 T ImDrawList::PopClipRect()
0205bacc 00000148 T ImDrawList::PushTextureID(void*)
0205bc14 00000064 T ImDrawList::PopTextureID()
0205bc78 00000310 T ImDrawList::PrimReserve(int, int)
0205bf88 00000c04 t ImDrawList::AddPolyline(ImVec2 const*, int, unsigned int, int, float) [clone .part.0]
0205cb8c 000005e4 t ImDrawList::AddConvexPolyFilled(ImVec2 const*, int, unsigned int) [clone .part.0]
0205d170 000000e0 T ImDrawList::PrimRect(ImVec2 const&, ImVec2 const&, unsigned int)
0205d250 00000100 T ImDrawList::PrimRectUV(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
0205d350 00000018 T ImDrawList::AddPolyline(ImVec2 const*, int, unsigned int, int, float)
0205d368 00000018 T ImDrawList::AddConvexPolyFilled(ImVec2 const*, int, unsigned int)
0205d380 000004ec T ImDrawList::_PathArcToFastEx(ImVec2 const&, float, int, int, int)
0205d86c 00000344 T ImDrawList::_PathArcToN(ImVec2 const&, float, float, float, int)
0205dbb0 00000160 T ImDrawList::PathArcToFast(ImVec2 const&, float, int, int)
0205dd10 00000800 T ImDrawList::PathArcTo(ImVec2 const&, float, float, float, int)
0205e510 00000328 T ImDrawList::PathBezierCubicCurveTo(ImVec2 const&, ImVec2 const&, ImVec2 const&, int)
0205e838 000002c4 T ImDrawList::PathBezierQuadraticCurveTo(ImVec2 const&, ImVec2 const&, int)
0205eafc 00000b08 T ImDrawList::PathRect(ImVec2 const&, ImVec2 const&, float, int)
0205f604 000002c8 T ImDrawList::AddLine(ImVec2 const&, ImVec2 const&, unsigned int, float)
0205f8cc 000000fc T ImDrawList::AddRect(ImVec2 const&, ImVec2 const&, unsigned int, float, int, float)
0205f9c8 000000e0 T ImDrawList::AddRectFilled(ImVec2 const&, ImVec2 const&, unsigned int, float, int)
0205faa8 0000015c T ImDrawList::AddRectFilledMultiColor(ImVec2 const&, ImVec2 const&, unsigned int, unsigned int, unsigned int, unsigned int)
0205fc04 00000388 T ImDrawList::AddTriangle(ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int, float)
0205ff8c 00000354 T ImDrawList::AddTriangleFilled(ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
020602e0 00000244 T ImDrawList::AddCircle(ImVec2 const&, float, unsigned int, int, float)
02060524 00000128 T ImDrawList::AddCircleFilled(ImVec2 const&, float, unsigned int, int)
0206064c 00000204 T ImDrawList::AddNgon(ImVec2 const&, float, unsigned int, int, float)
02060850 000001dc T ImDrawList::AddNgonFilled(ImVec2 const&, float, unsigned int, int)
02060a2c 000001d8 T ImDrawList::AddBezierCubic(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int, float, int)
02060c04 000001bc T ImDrawList::AddBezierQuadratic(ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int, float, int)
02060dc0 000000e8 T ImDrawList::AddImage(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
02060ea8 00000154 T ImDrawListSplitter::ClearFreeMemory()
02060ffc 00000114 T ImDrawList::_ClearFreeMemory()
02061110 00000280 T ImDrawListSplitter::Split(ImDrawList*, int)
02061390 00000198 T ImDrawListSplitter::SetCurrentChannel(ImDrawList*, int)
02061528 00000600 t ImDrawListSplitter::Merge(ImDrawList*) [clone .part.0]
02061b28 00000010 T ImDrawListSplitter::Merge(ImDrawList*)
02061b38 00000394 T ImDrawList::_ResetForNewFrame()
02061ecc 000000c0 T ImDrawData::Clear()
02061f8c 00000288 T ImGui::AddDrawListToDrawDataEx(ImDrawData*, ImVector<ImDrawList*>*, ImDrawList*)
02062214 000001f8 T ImGui::ShadeVertsLinearColorGradientKeepAlpha(ImDrawList*, int, int, ImVec2, ImVec2, unsigned int, unsigned int)
0206240c 00000048 T ImFontAtlas::ImFontAtlas()
0206240c 00000048 T ImFontAtlas::ImFontAtlas()
02062454 00000084 T ImFontAtlas::ClearTexData()
020624d8 000001c8 T ImFontAtlas::AddCustomRectRegular(int, int)
020626a0 00000138 T ImFontAtlas::CalcCustomRectUV(ImFontAtlasCustomRect const*, ImVec2*, ImVec2*) const
020627d8 00000194 T ImFontAtlas::GetMouseCursorTexData(int, ImVec2*, ImVec2*, ImVec2*, ImVec2*)
0206296c 00000270 T ImFontAtlasBuildPackCustomRects(ImFontAtlas*, void*)
02062bdc 000001c0 T ImFontAtlasBuildRender8bppRectFromString(ImFontAtlas*, int, int, int, int, char const*, char, unsigned char)
02062d9c 000001ec T ImFontAtlasBuildRender32bppRectFromString(ImFontAtlas*, int, int, int, int, char const*, char, unsigned int)
02062f88 000002d8 t ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas*)
02063260 000000b4 T ImFontAtlasBuildInit(ImFontAtlas*)
02063314 00000080 T ImFont::ImFont()
02063314 00000080 T ImFont::ImFont()
02063394 00000394 T ImFontAtlas::AddFont(ImFontConfig const*)
02063728 00000158 T ImFontAtlas::AddFontFromMemoryTTF(void*, int, float, ImFontConfig const*, unsigned short const*)
02063880 000003e0 T ImFontAtlas::AddFontFromMemoryCompressedTTF(void const*, int, float, ImFontConfig const*, unsigned short const*)
02063c60 00000174 T ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(char const*, float, ImFontConfig const*, unsigned short const*)
02063dd4 000001a0 T ImFontAtlas::AddFontDefault(ImFontConfig const*)
02063f74 000000c4 T ImFontAtlas::Build()
02064038 000001c8 T ImFontAtlas::GetTexDataAsRGBA32(unsigned char**, int*, int*, int*)
02064200 000000d0 T ImFont::ClearOutputData()
020642d0 0000005c T ImFont::~ImFont()
020642d0 0000005c T ImFont::~ImFont()
0206432c 00000060 T ImFont::IsGlyphRangeUnused(unsigned int, unsigned int)
0206438c 00000398 T ImFont::GrowIndex(int)
02064724 00000914 T ImFont::BuildLookupTable()
02065038 00000400 T ImFont::AddGlyph(ImFontConfig const*, unsigned short, float, float, float, float, float, float, float, float, float)
02065438 000001d4 t ImFontAtlasBuildFinish(ImFontAtlas*) [clone .part.0]
0206560c 000037c8 t ImFontAtlasBuildWithStbTruetype(ImFontAtlas*)
02068dd4 00000040 T ImFont::FindGlyph(unsigned short) const
02068e14 00000040 T ImFont::FindGlyphNoFallback(unsigned short) const
02068e54 000002c8 T ImFont::CalcWordWrapPositionA(float, char const*, char const*, float) const
0206911c 0000039c T ImFont::CalcTextSizeA(float, float, float, char const*, char const*, char const**) const
020694b8 000001d0 T ImFont::RenderChar(ImDrawList*, float, ImVec2 const&, unsigned int, unsigned short) const
02069688 00000824 T ImFont::RenderText(ImDrawList*, float, ImVec2 const&, unsigned int, ImVec4 const&, char const*, char const*, float, bool) const
02069eac 00000214 T ImDrawList::AddText(ImFont const*, float, ImVec2 const&, unsigned int, char const*, char const*, float, ImVec4 const*)
0206a0c0 00000030 T ImDrawList::AddText(ImVec2 const&, unsigned int, char const*, char const*)
0206a0f0 00000498 T ImGui::RenderArrow(ImDrawList*, ImVec2, unsigned int, int, float)
0206a588 000000bc T ImGui::RenderBullet(ImDrawList*, ImVec2, unsigned int)
0206a644 00000464 T ImGui::RenderCheckMark(ImDrawList*, ImVec2, unsigned int, float)
0206aaa8 00000474 T ImGui::RenderArrowPointingAt(ImDrawList*, ImVec2, ImVec2, int, unsigned int)
0206af1c 00000eac T ImGui::RenderRectFilledRangeH(ImDrawList*, ImRect const&, unsigned int, float, float, float)
0206bdc8 000003bc T ImGui::RenderColorRectWithAlphaCheckerboard(ImDrawList*, ImVec2, ImVec2, unsigned int, float, ImVec2, float, int)
0206c184 00000348 t TableSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void*, char const*)
0206c4cc 0000002c t TableGetColumnAvailSortDirection(ImGuiTableColumn*, int) [clone .part.0]
0206c4f8 0000002c t ImVector<ImGuiTableInstanceData>::operator[](int) [clone .part.0]
0206c524 0000002c t ImPool<ImGuiTable>::GetIndex(ImGuiTable const*) const [clone .part.0]
0206c550 0000002c t ImVector<ImGuiTableTempData>::operator[](int) [clone .part.0]
0206c57c 0000002c t ImVector<float>::operator[](int) [clone .part.0]
0206c5a8 0000002c t ImSpan<ImGuiTableColumn>::operator[](int) [clone .part.0]
0206c5d4 0000002c t ImSpan<short>::operator[](int) [clone .part.0]
0206c600 0000002c t ImSpan<ImGuiTableColumn>::operator[](int) const [clone .part.0]
0206c62c 0000002c t ImSpan<ImGuiTableCellData>::operator[](int) [clone .part.0]
0206c658 0000002c t ImVector<ImDrawChannel>::operator[](int) [clone .part.0]
0206c684 0000002c t ImVector<ImGuiOldColumnData>::operator[](int) [clone .part.0]
0206c6b0 0000002c t ImVector<ImGuiTable>::operator[](int) [clone .part.0]
0206c6dc 0000002c t ImChunkStream<ImGuiTableSettings>::offset_from_ptr(ImGuiTableSettings const*) [clone .part.0]
0206c708 000000d0 t TableSettingsHandler_ApplyAll(ImGuiContext*, ImGuiSettingsHandler*)
0206c7d8 00000108 t TableSettingsHandler_ClearAll(ImGuiContext*, ImGuiSettingsHandler*)
0206c8e0 0000050c t TableSettingsHandler_WriteAll(ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*)
0206cdec 000003e0 t TableSetupColumnFlags(ImGuiTable*, ImGuiTableColumn*, int)
0206d1cc 00000434 t ImGui::TableSortSpecsSanitize(ImGuiTable*) [clone .part.0]
0206d600 00000124 T ImGui::TableBeginInitMemory(ImGuiTable*, int)
0206d724 00000338 T ImGui::TableSetupColumn(char const*, int, float, unsigned int)
0206da5c 000002bc T ImGui::TableSetupScrollFreeze(int, int)
0206dd18 000000e0 T ImGui::TableGetColumnName(int)
0206ddf8 000000bc T ImGui::TableGetColumnName(ImGuiTable const*, int)
0206deb4 00000090 T ImGui::TableGetColumnFlags(int)
0206df44 000000a0 T ImGui::TableGetColumnResizeID(ImGuiTable*, int, int)
0206dfe4 00000420 T ImGui::TableUpdateBorders(ImGuiTable*)
0206e404 000001a4 T ImGui::TableSetBgColor(int, unsigned int, int)
0206e5a8 00000024 T ImGui::TableGetRowIndex()
0206e5cc 00000190 T ImGui::TableBeginRow(ImGuiTable*)
0206e75c 00000024 T ImGui::TableGetColumnIndex()
0206e780 00000124 T ImGui::TableEndCell(ImGuiTable*)
0206e8a4 00000138 T ImGui::TableGetMaxColumnWidth(ImGuiTable const*, int)
0206e9dc 000000a0 T ImGui::TableGetColumnWidthAuto(ImGuiTable*, ImGuiTableColumn*)
0206ea7c 0000008c T ImGui::TableSetColumnWidthAutoAll(ImGuiTable*)
0206eb08 00000398 t ImGui::TableDrawContextMenu(ImGuiTable*) [clone .part.0]
0206eea0 000001c8 T ImGui::TableUpdateColumnsWeightFromWidth(ImGuiTable*)
0206f068 000002f4 T ImGui::TableSetColumnWidth(int, float)
0206f35c 00000474 T ImGui::TableBeginApplyRequests(ImGuiTable*)
0206f7d0 00000290 T ImGui::TableSetupDrawChannels(ImGuiTable*)
0206fa60 00000cdc T ImGui::TableMergeDrawChannels(ImGuiTable*)
0207073c 00000554 T ImGui::TableDrawBorders(ImGuiTable*)
02070c90 000000f4 T ImGui::TableGetColumnNextSortDirection(ImGuiTableColumn*)
02070d84 00000254 T ImGui::TableSetColumnSortDirection(int, int, bool)
02070fd8 00000284 T ImGui::TableSortSpecsBuild(ImGuiTable*)
0207125c 00000174 T ImGui::TableGetHeaderRowHeight()
020713d0 000000c0 T ImGui::TableOpenContextMenu(int)
02071490 000008d0 T ImGui::TableHeader(char const*)
02071d60 00000080 T ImGui::TableBeginContextMenuPopup(ImGuiTable*)
02071de0 000015a4 T ImGui::TableUpdateLayout(ImGuiTable*)
02073384 000000a0 T ImGui::TableGetSortSpecs()
02073424 000001bc T ImGui::TableSettingsCreate(unsigned int, int)
020735e0 000000dc T ImGui::TableSettingsFindByID(unsigned int)
020736bc 0000011c t TableSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, char const*)
020737d8 000000cc T ImGui::TableGetBoundSettings(ImGuiTable*)
020738a4 0000027c t ImGui::TableSaveSettings(ImGuiTable*) [clone .part.0] [clone .constprop.0]
02073b20 00000360 T ImGui::TableLoadSettings(ImGuiTable*)
02073e80 000014b0 T ImGui::BeginTableEx(char const*, unsigned int, int, int, ImVec2 const&, float)
02075330 0000006c T ImGui::BeginTable(char const*, int, int, ImVec2 const&, float)
0207539c 000000a4 T ImGui::TableSettingsAddSettingsHandler()
02075440 000001bc T ImGui::TableGcCompactTransientBuffers(ImGuiTable*)
020755fc 0000003c T ImGui::TableGcCompactTransientBuffers(ImGuiTableTempData*)
02075638 000002f0 T ImGui::TableGcCompactSettings()
02075928 00000198 T ImGui::DebugNodeTableSettings(ImGuiTableSettings*)
02075ac0 0000083c T ImGui::DebugNodeTable(ImGuiTable*)
020762fc 0000006c T ImGui::SetWindowClipRectBeforeSetChannel(ImGuiWindow*, ImRect const&)
02076368 00000074 T ImGui::TablePushBackgroundChannel()
020763dc 0000019c T ImGui::TableBeginCell(ImGuiTable*, int)
02076578 000000ec T ImGui::TableSetColumnIndex(int)
02076664 00000084 T ImGui::TablePopBackgroundChannel()
020766e8 0000098c T ImGui::TableEndRow(ImGuiTable*)
02077074 000000e4 T ImGui::TableNextRow(int, float)
02077158 000000d8 T ImGui::TableNextColumn()
02077230 00000264 T ImGui::TableHeadersRow()
02077494 00000de8 T ImGui::EndTable()
0207827c 00000024 T ImGui::GetColumnIndex()
020782a0 00000014 T ImGui::GetColumnOffsetFromNorm(ImGuiOldColumns const*, float)
020782b4 000000a8 T ImGui::GetColumnOffset(int)
0207835c 000000a8 T ImGui::GetColumnWidth(int)
02078404 00000274 T ImGui::SetColumnOffset(int, float)
02078678 00000088 T ImGui::PushColumnsBackground()
02078700 0000009c T ImGui::PopColumnsBackground()
0207879c 00000270 T ImGui::FindOrCreateColumns(ImGuiWindow*, unsigned int)
02078a0c 00000828 T ImGui::BeginColumns(char const*, int, int)
02079234 000002b4 T ImGui::NextColumn()
020794e8 000005fc T ImGui::EndColumns()
02079ae4 000000cc T ImGui::Columns(int, char const*, bool)
02079bb0 00000040 t ShrinkWidthItemComparer(void const*, void const*)
02079bf0 0000001c t Items_ArrayGetter(void*, int, char const**)
02079c0c 00000090 t ImStb::is_separator(unsigned int)
02079c9c 00000014 t Plot_ArrayGetter(void*, int)
02079cb0 00000080 t TabItemComparerBySection(void const*, void const*)
02079d30 00000010 t TabItemComparerByBeginOrder(void const*, void const*)
02079d40 000000bc t Items_SingleStringGetter(void*, int, char const**)
02079dfc 000000c4 t ImStb::STB_TEXTEDIT_DELETECHARS(ImGuiInputTextState*, int, int)
02079ec0 000003d8 t InputTextFilterCharacter(ImGuiContext*, unsigned int*, int, int (*)(ImGuiInputTextCallbackData*), void*, ImGuiInputSource)
0207a298 00000154 t ColorEditRestoreHS(float const*, float*, float*, float*)
0207a3ec 00000220 t RenderArrowsForVerticalBar(ImDrawList*, ImVec2, ImVec2, float, float)
0207a60c 0000010c t ImStb::stb_textedit_discard_undo(ImStb::StbUndoState*) [clone .part.0]
0207a718 00000128 t ImStb::stb_text_createundo(ImStb::StbUndoState*, int, int, int)
0207a840 0000002c t ImVec2::operator[](unsigned int) [clone .part.0]
0207a86c 0000002c t ImGui::MouseButtonToKey(int) [clone .part.0]
0207a898 0000002c t ImGui::DataTypeGetInfo(int) [clone .part.0]
0207a8c4 00000078 t ImParseFormatFindEnd(char const*) [clone .part.0]
0207a93c 0000002c t ImGui::TabBarGetTabName(ImGuiTabBar*, ImGuiTabItem*) [clone .part.0]
0207a968 0000002c t ImGui::TabBarQueueReorder(ImGuiTabBar*, ImGuiTabItem*, int) [clone .part.0]
0207a994 0000002c t ImVector<unsigned short>::operator[](int) [clone .part.0]
0207a9c0 0000002c t ImVector<ImGuiTabItem>::index_from_ptr(ImGuiTabItem const*) const [clone .part.0]
0207a9ec 0000002c t ImVector<ImGuiGroupData>::back() [clone .part.0]
0207aa18 0000002c t ImSpan<ImGuiTableColumn>::operator[](int) [clone .part.0]
0207aa44 0000002c t ImVector<unsigned short>::operator[](int) const [clone .part.0]
0207aa70 0000002c t ImVector<unsigned int>::back() [clone .part.0]
0207aa9c 0000002c t ImVector<ImGuiNavTreeNodeData>::back() [clone .part.0]
0207aac8 0000002c t ImVector<ImGuiPopupData>::operator[](int) [clone .part.0]
0207aaf4 0000002c t ImVector<ImGuiTabItem>::operator[](int) [clone .part.0]
0207ab20 0000002c t ImVector<ImGuiTabBar>::operator[](int) [clone .part.0]
0207ab4c 00000628 t float ImGui::ScaleRatioFromValueT<double, double, double>(int, double, double, double, bool, float, float) [clone .isra.0]
0207b174 000005f8 t float ImGui::ScaleRatioFromValueT<float, float, float>(int, float, float, float, bool, float, float) [clone .isra.0]
0207b76c 00000278 t unsigned long long ImGui::ScaleValueFromRatioT<unsigned long long, long long, double>(int, float, unsigned long long, unsigned long long, bool, float, float) [clone .isra.0]
0207b9e4 000003d0 t float ImGui::ScaleRatioFromValueT<unsigned long long, long long, double>(int, unsigned long long, unsigned long long, unsigned long long, bool, float, float) [clone .isra.0]
0207bdb4 000006c4 t float ImGui::ScaleRatioFromValueT<long long, long long, double>(int, long long, long long, long long, bool, float, float) [clone .isra.0]
0207c478 0000023c t unsigned int ImGui::ScaleValueFromRatioT<unsigned int, int, float>(int, float, unsigned int, unsigned int, bool, float, float) [clone .isra.0]
0207c6b4 0000031c t float ImGui::ScaleRatioFromValueT<unsigned int, int, float>(int, unsigned int, unsigned int, unsigned int, bool, float, float) [clone .isra.0]
0207c9d0 00000564 t float ImGui::ScaleRatioFromValueT<int, int, float>(int, int, int, int, bool, float, float) [clone .isra.0]
0207cf34 00000084 t IsRootOfOpenMenuSet()
0207cfb8 00000128 t InputTextCalcTextSizeW(ImGuiContext*, unsigned short const*, unsigned short const*, unsigned short const**, ImVec2*, bool) [clone .constprop.0] [clone .isra.0]
0207d0e0 00000098 t ImStb::STB_TEXTEDIT_LAYOUTROW(ImStb::StbTexteditRow*, ImGuiInputTextState*, int)
0207d178 0000012c t ImStb::stb_text_makeundo_replace(ImGuiInputTextState*, ImStb::STB_TexteditState*, int, int, int)
0207d2a4 0000013c t ImStb::stb_textedit_delete(ImGuiInputTextState*, ImStb::STB_TexteditState*, int, int)
0207d3e0 0000020c t ImStb::STB_TEXTEDIT_MOVEWORDRIGHT_MAC(ImGuiInputTextState*, int)
0207d5ec 00000090 t ImStb::STB_TEXTEDIT_GETWIDTH(ImGuiInputTextState*, int, int)
0207d67c 00000118 t ImStb::is_word_boundary_from_right(ImGuiInputTextState*, int) [clone .part.0]
0207d794 000000ac t ImStb::STB_TEXTEDIT_MOVEWORDRIGHT_IMPL(ImGuiInputTextState*, int)
0207d840 00000230 t ImStb::stb_textedit_find_charpos(ImStb::StbFindState*, ImGuiInputTextState*, int, int)
0207da70 0000023c t ImStb::stb_text_locate_coord(ImGuiInputTextState*, float, float)
0207dcac 000002cc t ImStb::STB_TEXTEDIT_INSERTCHARS(ImGuiInputTextState*, int, unsigned short const*, int)
0207df78 00000124 t ImStb::stb_textedit_delete_selection(ImGuiInputTextState*, ImStb::STB_TexteditState*)
0207e09c 00001820 t ImStb::stb_textedit_key(ImGuiInputTextState*, ImStb::STB_TexteditState*, int)
0207f8bc 0000060c T ImGui::TextEx(char const*, char const*, int)
0207fec8 00000008 T ImGui::TextUnformatted(char const*, char const*)
0207fed0 000000bc T ImGui::Text(char const*, ...)
0207ff8c 00000060 T ImGui::TextV(char const*, __va_list_tag*)
0207ffec 000000dc T ImGui::TextColored(ImVec4 const&, char const*, ...)
020800c8 000000f0 T ImGui::TextDisabled(char const*, ...)
020801b8 00000154 T ImGui::TextWrapped(char const*, ...)
0208030c 00000254 T ImGui::LabelTextV(char const*, char const*, __va_list_tag*)
02080560 00000080 T ImGui::LabelText(char const*, char const*, ...)
020805e0 0000020c T ImGui::BulletTextV(char const*, __va_list_tag*)
020807ec 00000084 T ImGui::BulletText(char const*, ...)
02080870 0000093c T ImGui::ButtonBehavior(ImRect const&, unsigned int, bool*, bool*, int)
020811ac 000002d0 T ImGui::ButtonEx(char const*, ImVec2 const&, int)
0208147c 00000008 T ImGui::Button(char const*, ImVec2 const&)
02081484 00000060 T ImGui::SmallButton(char const*)
020814e4 0000017c T ImGui::InvisibleButton(char const*, ImVec2 const&, int)
02081660 000002ac T ImGui::ArrowButtonEx(char const*, int, ImVec2, int)
0208190c 0000005c T ImGui::ArrowButton(char const*, int)
02081968 00000318 T ImGui::CloseButton(unsigned int, ImVec2 const&)
02081c80 0000021c T ImGui::CollapseButton(unsigned int, ImVec2 const&)
02081e9c 000000fc T ImGui::GetWindowScrollbarRect(ImGuiWindow*, ImGuiAxis)
02081f98 00000794 T ImGui::ScrollbarEx(ImRect const&, unsigned int, ImGuiAxis, long long*, long long, long long, int)
0208272c 000001e0 T ImGui::Scrollbar(ImGuiAxis)
0208290c 000001f0 T ImGui::Image(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec4 const&, ImVec4 const&)
02082afc 00000324 T ImGui::ImageButtonEx(unsigned int, void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec4 const&, ImVec4 const&, int)
02082e20 00000090 T ImGui::ImageButton(char const*, void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec4 const&, ImVec4 const&)
02082eb0 000004a0 T ImGui::Checkbox(char const*, bool*)
02083350 000000cc T ImGui::CheckboxFlags(char const*, int*, int)
0208341c 000004b8 T ImGui::RadioButton(char const*, bool)
020838d4 00000054 T ImGui::RadioButton(char const*, int*, int)
02083928 0000030c T ImGui::ProgressBar(float, ImVec2 const&, char const*)
02083c34 0000017c T ImGui::Bullet()
02083db0 0000005c T ImGui::Spacing()
02083e0c 0000008c T ImGui::Dummy(ImVec2 const&)
02083e98 000000ac T ImGui::NewLine()
02083f44 00000090 T ImGui::AlignTextToFramePadding()
02083fd4 00000410 T ImGui::SeparatorEx(int, float)
020843e4 00000034 T ImGui::Separator()
02084418 00000408 T ImGui::SeparatorTextEx(unsigned int, char const*, char const*, float)
02084820 00000064 T ImGui::SeparatorText(char const*)
02084884 00000378 T ImGui::ShrinkWidths(ImGuiShrinkWidthItem*, int, float)
02084bfc 000004c4 T ImGui::BeginComboPopup(unsigned int, ImRect const&, int)
020850c0 00000674 T ImGui::BeginCombo(char const*, char const*, int)
02085734 00000004 T ImGui::EndCombo()
02085738 000000c0 T ImGui::DataTypeFormatString(char*, int, int, void const*, char const*)
020857f8 000005b8 T ImGui::DataTypeApplyOp(int, int, void*, void const*, void const*)
02085db0 000001d0 T ImGui::DataTypeCompare(int, void const*, void const*)
02085f80 0000031c T ImGui::DataTypeClamp(int, void*, void const*, void const*)
0208629c 000000c8 T ImParseFormatSanitizeForPrinting(char const*, char*, unsigned int)
02086364 000001d4 T ImParseFormatSanitizeForScanning(char const*, char*, unsigned int)
02086538 00000268 T ImGui::DataTypeApplyFromText(char const*, int, void*, char const*)
020867a0 00000174 T ImParseFormatPrecision(char const*, int)
02086914 000000dc T ImGuiInputTextCallbackData::DeleteChars(int, int)
020869f0 00000240 T ImGuiInputTextCallbackData::InsertChars(int, char const*, char const*)
02086c30 000001d8 T ImGui::InputTextDeactivateHook(unsigned int)
02086e08 000056fc T ImGui::InputTextEx(char const*, char const*, char*, int, ImVec2 const&, int, int (*)(ImGuiInputTextCallbackData*), void*)
0208c504 00000168 T ImGui::TempInputText(ImRect const&, unsigned int, char const*, char*, int, int)
0208c66c 00000310 T ImGui::TempInputScalar(ImRect const&, unsigned int, char const*, int, void*, char const*, void const*, void const*)
0208c97c 00000078 T ImGui::InputText(char const*, char*, unsigned int, int, int (*)(ImGuiInputTextCallbackData*), void*)
0208c9f4 00000030 T ImGui::InputTextMultiline(char const*, char*, unsigned int, ImVec2 const&, int, int (*)(ImGuiInputTextCallbackData*), void*)
0208ca24 00000068 T ImGui::InputTextWithHint(char const*, char const*, char*, unsigned int, int, int (*)(ImGuiInputTextCallbackData*), void*)
0208ca8c 000004a4 T ImGui::InputScalar(char const*, int, void*, void const*, void const*, char const*, int)
0208cf30 000001cc T ImGui::InputScalarN(char const*, int, void*, int, void const*, void const*, char const*, int)
0208d0fc 00000020 T ImGui::InputFloat2(char const*, float*, char const*, int)
0208d11c 00000020 T ImGui::InputFloat3(char const*, float*, char const*, int)
0208d13c 00000020 T ImGui::InputFloat4(char const*, float*, char const*, int)
0208d15c 00000024 T ImGui::InputInt2(char const*, int*, int)
0208d180 00000024 T ImGui::InputInt3(char const*, int*, int)
0208d1a4 00000024 T ImGui::InputInt4(char const*, int*, int)
0208d1c8 00000070 T ImGui::InputFloat(char const*, float*, float, float, char const*, int)
0208d238 00000078 T ImGui::InputInt(char const*, int*, int, int, int)
0208d2b0 00000070 T ImGui::InputDouble(char const*, double*, double, double, char const*, int)
0208d320 00000250 T ImGui::DebugNodeInputTextState(ImGuiInputTextState*)
0208d570 00000138 T ImGui::SetColorEditOptions(int)
0208d6a8 000003c4 T ImGui::ColorTooltip(char const*, float const*, int)
0208da6c 0000074c T ImGui::ColorButton(char const*, ImVec4 const&, int, ImVec2 const&)
0208e1b8 0000014c T ImGui::TreeNodeUpdateNextOpen(unsigned int, int)
0208e304 00000c68 T ImGui::TreeNodeBehavior(unsigned int, int, char const*, char const*)
0208ef6c 00000064 T ImGui::TreeNode(char const*)
0208efd0 00000074 T ImGui::TreeNodeEx(char const*, int)
0208f044 00000098 T ImGui::TreeNodeExV(char const*, int, char const*, __va_list_tag*)
0208f0dc 00000088 T ImGui::TreeNode(char const*, char const*, ...)
0208f164 0000007c T ImGui::TreeNodeEx(char const*, int, char const*, ...)
0208f1e0 00000094 T ImGui::TreeNodeExV(void const*, int, char const*, __va_list_tag*)
0208f274 00000088 T ImGui::TreeNode(void const*, char const*, ...)
0208f2fc 0000007c T ImGui::TreeNodeEx(void const*, int, char const*, ...)
0208f378 000001a0 T ImGui::TreePop()
0208f518 00000020 T ImGui::GetTreeNodeToLabelSpacing()
0208f538 00000044 T ImGui::SetNextItemOpen(bool, int)
0208f57c 00000074 T ImGui::CollapsingHeader(char const*, int)
0208f5f0 000001c4 T ImGui::CollapsingHeader(char const*, bool*, int)
0208f7b4 00000764 T ImGui::Selectable(char const*, bool, int, ImVec2 const&)
0208ff18 00000274 T ImGui::Combo(char const*, int*, bool (*)(void*, int, char const**), void*, int, int)
0209018c 0000001c T ImGui::Combo(char const*, int*, char const* const*, int, int)
020901a8 000000e4 T ImGui::Combo(char const*, int*, char const*, int)
0209028c 0000058c T ImGui::ColorEditOptionsPopup(float const*, int)
02090818 00000044 T ImGui::Selectable(char const*, bool*, int, ImVec2 const&)
0209085c 00000344 T ImGui::BeginListBox(char const*, ImVec2 const&)
02090ba0 00000058 T ImGui::EndListBox()
02090bf8 000002bc T ImGui::ListBox(char const*, int*, bool (*)(void*, int, char const**), void*, int, int)
02090eb4 0000001c T ImGui::ListBox(char const*, int*, char const* const*, int, int)
02090ed0 00000998 T ImGui::PlotEx(ImGuiPlotType, char const*, float (*)(void*, int), void*, int, int, char const*, float, float, ImVec2 const&)
02091868 00000068 T ImGui::PlotLines(char const*, float const*, int, int, char const*, float, float, ImVec2, int)
020918d0 00000060 T ImGui::PlotLines(char const*, float (*)(void*, int), void*, int, int, char const*, float, float, ImVec2)
02091930 00000068 T ImGui::PlotHistogram(char const*, float const*, int, int, char const*, float, float, ImVec2, int)
02091998 00000060 T ImGui::PlotHistogram(char const*, float (*)(void*, int), void*, int, int, char const*, float, float, ImVec2)
020919f8 00000184 T ImGuiMenuColumns::CalcNextTotalWidth(bool)
02091b7c 00000084 T ImGuiMenuColumns::Update(float, bool)
02091c00 00000144 T ImGuiMenuColumns::DeclColumns(float, float, float, float)
02091d44 00000310 T ImGui::BeginMenuBar()
02092054 000001ec T ImGui::EndMenuBar()
02092240 00000340 T ImGui::BeginViewportSideBar(char const*, ImGuiViewport*, int, float, int)
02092580 000000d0 T ImGui::BeginMainMenuBar()
02092650 00000064 T ImGui::EndMainMenuBar()
020926b4 00000de8 T ImGui::BeginMenuEx(char const*, char const*, bool)
0209349c 0000000c T ImGui::BeginMenu(char const*, bool)
020934a8 000000f8 T ImGui::EndMenu()
020935a0 00000648 T ImGui::MenuItemEx(char const*, char const*, char const*, bool, bool)
02093be8 00000018 T ImGui::MenuItem(char const*, char const*, bool, bool)
02093c00 00000094 T ImGui::MenuItem(char const*, char const*, bool*, bool)
02093c94 000003fc T ImGui::BeginTabBarEx(ImGuiTabBar*, ImRect const&, int)
02094090 00000294 T ImGui::BeginTabBar(char const*, int)
02094324 00000078 T ImGui::TabBarFindTabByID(ImGuiTabBar*, unsigned int)
0209439c 00000040 T ImGui::TabBarGetTabName(ImGuiTabBar*, ImGuiTabItem*)
020943dc 00000060 T ImGui::TabBarQueueReorder(ImGuiTabBar*, ImGuiTabItem*, int)
0209443c 00000198 T ImGui::TabBarQueueReorderFromMousePos(ImGuiTabBar*, ImGuiTabItem*, ImVec2)
020945d4 00000174 T ImGui::TabBarProcessReorder(ImGuiTabBar*)
02094748 000000c4 T ImGui::EndTabItem()
0209480c 00000070 T ImGui::SetTabItemClosed(char const*)
0209487c 000000dc T ImGui::TabItemCalcSize(char const*, bool)
02094958 00001568 t ImGui::TabBarLayout(ImGuiTabBar*)
02095ec0 00000208 T ImGui::EndTabBar()
020960c8 00000564 T ImGui::TabItemBackground(ImDrawList*, ImRect const&, int, unsigned int)
0209662c 00000410 T ImGui::TabItemLabelAndCloseButton(ImDrawList*, ImRect const&, int, ImVec2, char const*, unsigned int, unsigned int, bool, bool*, bool*)
02096a3c 00000d78 T ImGui::TabItemEx(ImGuiTabBar*, char const*, bool*, int, ImGuiWindow*)
020977b4 00000124 T ImGui::BeginTabItem(char const*, bool*, int)
020978d8 00000074 T ImGui::TabItemButton(char const*, int)
0209794c 000004a4 W int ImGui::ScaleValueFromRatioT<int, int, float>(int, float, int, int, bool, float, float)
02097df0 00000110 W int ImGui::RoundScalarWithFormatT<int>(char const*, int, int)
02097f00 000006d4 W bool ImGui::DragBehaviorT<int, int, float>(int, int*, float, int, int, char const*, int)
020985d4 0000091c W bool ImGui::SliderBehaviorT<int, int, float>(ImRect const&, unsigned int, int, int*, int, int, char const*, int, ImRect*)
02098ef0 00000150 W unsigned int ImGui::RoundScalarWithFormatT<unsigned int>(char const*, int, unsigned int)
02099040 000006b4 W bool ImGui::DragBehaviorT<unsigned int, int, float>(int, unsigned int*, float, unsigned int, unsigned int, char const*, int)
020996f4 00000874 W bool ImGui::SliderBehaviorT<unsigned int, int, float>(ImRect const&, unsigned int, int, unsigned int*, unsigned int, unsigned int, char const*, int, ImRect*)
02099f68 000007c4 W long long ImGui::ScaleValueFromRatioT<long long, long long, double>(int, float, long long, long long, bool, float, float)
0209a72c 0000050c W float ImGui::ScaleValueFromRatioT<float, float, float>(int, float, float, float, bool, float, float)
0209ac38 000000f8 W float ImGui::RoundScalarWithFormatT<float>(char const*, int, float)
0209ad30 00000690 W bool ImGui::DragBehaviorT<float, float, float>(int, float*, float, float, float, char const*, int)
0209b3c0 00000988 W bool ImGui::SliderBehaviorT<float, float, float>(ImRect const&, unsigned int, int, float*, float, float, char const*, int, ImRect*)
0209bd48 00000540 W double ImGui::ScaleValueFromRatioT<double, double, double>(int, float, double, double, bool, float, float)
0209c288 000000f4 W double ImGui::RoundScalarWithFormatT<double>(char const*, int, double)
0209c37c 000006c4 W bool ImGui::DragBehaviorT<double, double, double>(int, double*, float, double, double, char const*, int)
0209ca40 00001110 T ImGui::DragBehavior(unsigned int, int, void*, float, void const*, void const*, char const*, int)
0209db50 0000082c T ImGui::DragScalar(char const*, int, void*, float, void const*, void const*, char const*, int)
0209e37c 000001dc T ImGui::DragScalarN(char const*, int, void*, int, float, void const*, void const*, char const*, int)
0209e558 00000044 T ImGui::DragFloat2(char const*, float*, float, float, float, char const*, int)
0209e59c 00000044 T ImGui::DragFloat3(char const*, float*, float, float, float, char const*, int)
0209e5e0 00000044 T ImGui::DragFloat4(char const*, float*, float, float, float, char const*, int)
0209e624 00000044 T ImGui::DragInt2(char const*, int*, float, int, int, char const*, int)
0209e668 00000044 T ImGui::DragInt3(char const*, int*, float, int, int, char const*, int)
0209e6ac 00000044 T ImGui::DragInt4(char const*, int*, float, int, int, char const*, int)
0209e6f0 00000040 T ImGui::DragFloat(char const*, float*, float, float, float, char const*, int)
0209e730 000002b0 T ImGui::DragFloatRange2(char const*, float*, float*, float, float, float, char const*, char const*, int)
0209e9e0 00000040 T ImGui::DragInt(char const*, int*, float, int, int, char const*, int)
0209ea20 000002b4 T ImGui::DragIntRange2(char const*, int*, int*, float, int, int, char const*, char const*, int)
0209ecd4 00001884 T ImGui::ColorEdit4(char const*, float*, int)
020a0558 00000008 T ImGui::ColorEdit3(char const*, float*, int)
020a0560 00001e50 T ImGui::ColorPicker4(char const*, float*, int, float const*)
020a23b0 0000007c T ImGui::ColorPicker3(char const*, float*, int)
020a242c 0000039c T ImGui::ColorPickerOptionsPopup(float const*, int)
020a27c8 00000994 W bool ImGui::SliderBehaviorT<double, double, double>(ImRect const&, unsigned int, int, double*, double, double, char const*, int, ImRect*)
020a315c 00001960 T ImGui::SliderBehavior(ImRect const&, unsigned int, int, void*, void const*, void const*, char const*, int, ImRect*)
020a4abc 000004b4 T ImGui::VSliderScalar(char const*, ImVec2 const&, int, void*, void const*, void const*, char const*, int)
020a4f70 00000040 T ImGui::VSliderFloat(char const*, ImVec2 const&, float*, float, float, char const*, int)
020a4fb0 00000040 T ImGui::VSliderInt(char const*, ImVec2 const&, int*, int, int, char const*, int)
020a4ff0 000005e0 T ImGui::SliderScalar(char const*, int, void*, void const*, void const*, char const*, int)
020a55d0 000001cc T ImGui::SliderScalarN(char const*, int, void*, int, void const*, void const*, char const*, int)
020a579c 00000044 T ImGui::SliderFloat2(char const*, float*, float, float, char const*, int)
020a57e0 00000044 T ImGui::SliderFloat3(char const*, float*, float, float, char const*, int)
020a5824 00000044 T ImGui::SliderFloat4(char const*, float*, float, float, char const*, int)
020a5868 00000044 T ImGui::SliderInt2(char const*, int*, int, int, char const*, int)
020a58ac 00000044 T ImGui::SliderInt3(char const*, int*, int, int, char const*, int)
020a58f0 00000044 T ImGui::SliderInt4(char const*, int*, int, int, char const*, int)
020a5934 00000040 T ImGui::SliderFloat(char const*, float*, float, float, char const*, int)
020a5974 0000009c T ImGui::SliderAngle(char const*, float*, float, float, char const*, int)
020a5a10 00000040 T ImGui::SliderInt(char const*, int*, int, int, char const*, int)
020a5a50 00000298 t ImGui_ImplGX2_SetupRenderState(ImDrawData*, int, int)
020a5d78 000000a4 T ImGui_ImplGX2_Init()
020a5e1c 000005d0 T ImGui_ImplGX2_RenderDrawData(ImDrawData*)
020a645c 00000200 T ImGui_ImplGX2_CreateFontsTexture()
020a669c 000000bc T ImGui_ImplGX2_DestroyFontsTexture()
020a6758 000000d4 T ImGui_ImplGX2_CreateDeviceObjects()
020a683c 00000074 T ImGui_ImplGX2_NewFrame()
020a68b0 000000a0 T ImGui_ImplGX2_DestroyDeviceObjects()
020a6950 00000084 T ImGui_ImplGX2_Shutdown()
020a69d4 00000074 t ImGui_ImplWiiU_WantsInput()
020a6a48 000000b8 T ImGui_ImplWiiU_Init(ImGui_ImplWiiU_Config)
020a6b00 00000078 T ImGui_ImplWiiU_Shutdown()
020a6b78 00000274 T ImGui_ImplWiiU_ProcessVPADInput(VPADStatus*)
020a6dfc 00000174 T ImGui_ImplWiiU_ProcessWPADInput(WPADStatusProController*)
020a6f70 00000040 T my_GX2SetContextState(GX2ContextState*)
020a6fb0 00000040 T my_GX2SetupContextStateEx(GX2ContextState*, int)
020a6ff0 00000018 T my_GX2SetTVBuffer(void*, unsigned int, int, GX2SurfaceFormat, GX2BufferingMode)
020a7008 00000018 T my_GX2SetDRCBuffer(void*, unsigned int, int, GX2SurfaceFormat, GX2BufferingMode)
020a7020 00000034 T my_GX2SwapScanBuffers()
020a7054 0000013c T my_VPADRead(VPADChan, VPADStatus*, unsigned int, VPADReadError*)
020a7190 00000060 T my_GX2GetCurrentScanBuffer(GX2ScanTarget, GX2ColorBuffer*)
020a71f0 000000a8 T my_GX2Init(unsigned int)
020a72b8 00000060 T my_WPADRead(WPADChan, WPADStatus*)
020a7318 00000078 T drawIntoColorBuffer(GX2ColorBuffer const*, GX2ScanTarget)
020a73a0 0000006c T my_GX2CopyColorBufferToScanBuffer(GX2ColorBuffer const*, GX2ScanTarget)
020a740c 00000060 T my_GX2MarkScanBufferCopied(GX2ScanTarget)
020a746c 00000004 W std::_Sp_counted_ptr<decltype(nullptr), (__gnu_cxx::_Lock_policy)2>::_M_dispose()
020a7470 00000010 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_destroy()
020a7480 00000010 T on_app_starting()
020a7490 00000004 W std::_Sp_counted_ptr_inplace<Overlay, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
020a7490 00000004 W std::_Sp_counted_ptr_inplace<Overlay, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
020a7494 00000004 T on_init_wut_malloc()
020a7498 00000004 T on_fini_wut_malloc()
020a749c 00000014 T on_init_wut_sockets()
020a74b0 00000014 T on_fini_wut_sockets()
020a74c4 00000004 T on_init_wut_newlib()
020a74c8 00000004 T on_fini_wut_newlib()
020a74cc 00000004 T on_init_wut_stdcpp()
020a74d0 00000004 T on_fini_wut_stdcpp()
020a74d4 00000040 T __init_wrapper()
020a7524 00000004 T __fini_wrapper()
020a7528 00000038 T wups_init_config_functions(wups_loader_init_config_args_t)
020a7560 00000034 T wups_init_button_combo_functions(wups_loader_init_button_combo_args_t_)
020a7594 00000004 T on_init_wut_devoptab()
020a7598 00000004 T on_fini_wut_devoptab()
020a759c 00000034 T init_storage(wups_loader_init_storage_args_t_)
020a75d0 00000008 W std::_Sp_counted_ptr_inplace<Overlay, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
020a75d8 00000008 W std::_Sp_counted_ptr_inplace<Overlay, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
020a75e0 00000058 T deinit_plugin()
020a7638 00000084 W std::_Sp_counted_ptr_inplace<Overlay, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
020a76bc 00000008 W std::_Sp_counted_ptr_inplace<Overlay, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
020a76c4 000001e0 T init_plugin()
020a78c4 000000e4 T Overlay::Overlay()
020a78c4 000000e4 T Overlay::Overlay()
020a79a8 00000058 T Overlay::~Overlay()
020a79a8 00000058 T Overlay::~Overlay()
020a7a00 00000004 T Overlay::update()
020a7a04 000000ac T Overlay::draw(unsigned int, unsigned int)
020a7ab0 00000034 T loadTexShader(WHBGfxShaderGroup&)
020a7ae4 00000004 T unloadTexShader(WHBGfxShaderGroup&)
020a7ae8 0000007c T initTexShaderAttrs(WHBGfxShaderGroup&)
020a7b64 00000304 T WHBGfxLoadGFDPixelShaderMappedMem(unsigned int, void const*)
020a7e88 00000304 T WHBGfxLoadGFDVertexShaderMappedMem(unsigned int, void const*)
020a81ac 0000008c T WHBGfxInitFetchShaderMappedMem(WHBGfxShaderGroup*)
020a8268 000000e8 T WHBGfxFreeShaderGroupMappedMem(WHBGfxShaderGroup*)
020a8350 000000ac T WHBGfxLoadGFDShaderGroupMappedMem(WHBGfxShaderGroup*, unsigned int, void const*)
020a83fc 00000058 T initLogging
020a8454 000000c4 T deinitLogging
020a8518 00000058 T getPluginName()
020a8570 000000c4 T WUPSButtonComboAPI_InitInternal
020a8634 000000b4 T WUPSConfigAPI_GetVersion
020a8708 00000220 T WUPSConfigAPI_InitLibrary_Internal
020a8948 0000000c T __wups_start
020a8964 00000060 W __init_wut_socket
020a89d4 0000005c W __fini_wut_socket
020a8a30 00000004 T __getreent
020a8a34 00000004 W wut_set_thread_specific
020a8a38 00000004 W wut_get_thread_specific
020a8a3c 0000015c W __assert_func
020a8ba8 000000a4 T WUPSStorageAPI_InitInternal
020a8c4c 000000d0 t __wups_thread_cleanup(unsigned int*, void*)
020a8d3c 00000130 T __wups_getreent()
020a8eac 000000a8 T wups_set_thread_specific
020a8f74 000000c8 T wups_get_thread_specific
020a905c 00000008 T __syscall_lock_init
020a9064 00000004 T __syscall_lock_acquire
020a9068 00000004 T __syscall_lock_release
020a906c 00000004 T __syscall_lock_close
020a9070 00000008 T __syscall_lock_init_recursive
020a9078 00000014 T __init_wut_newlib
020a908c 00000004 T __fini_wut_newlib
020a9090 00000078 T __fini_wut_sbrk_heap
020a9118 00000004 T __init_wut_malloc
020a911c 00000004 T __fini_wut_malloc
020a9120 0000006c T _malloc_r
020a918c 00000018 T _free_r
020a91a4 000000e0 T _realloc_r
020a9294 0000009c T _calloc_r
020a9330 00000070 T _memalign_r
020a93a0 0000021c T WHBGfxInitShaderAttribute
020a95bc 0000006c T WHBAddLogHandler
020a9628 00000060 T WHBRemoveLogHandler
020a9688 000001c0 T WHBLogPrintf
020a9848 00000068 t cafeLogHandler
020a98c0 0000000c T WHBLogCafeInit
020a98cc 0000000c T WHBLogCafeDeinit
020a98d8 0000005c t moduleLogHandler
020a9934 000000bc T WHBLogModuleInit
020a9a20 0000000c T WHBLogModuleDeinit
020a9a2c 0000004c t udpLogHandler
020a9a78 000000cc T WHBLogUdpInit
020a9b64 0000004c T WHBLogUdpDeinit
020a9bb0 00000094 t setLastError
020a9c44 000000c0 t _GFDCheckHeaderVersions
020a9d04 000004fc t _GFDGetGenericBlock
020aa200 000000f4 t _GFDGetBlockCount.part.0
020aa2f4 0000011c t _GFDGetBlockDataSize
020aa410 00000058 T GFDGetPixelShaderCount
020aa468 00000010 T GFDGetPixelShaderHeaderSize
020aa478 00000010 T GFDGetPixelShaderProgramSize
020aa488 00000058 T GFDGetPixelShader
020aa4e0 00000058 T GFDGetVertexShaderCount
020aa538 00000010 T GFDGetVertexShaderHeaderSize
020aa548 00000010 T GFDGetVertexShaderProgramSize
020aa558 00000048 T GFDGetVertexShader
020aa5a0 00000008 T __gthr_impl_active
020aa5a8 00000004 T __gthr_impl_once
020aa5ac 00000030 T __gthr_impl_key_delete
020aa5dc 00000030 T __gthr_impl_getspecific
020aa60c 00000030 T __gthr_impl_setspecific
020aa63c 00000004 T __gthr_impl_mutex_init_function
020aa640 00000004 T __gthr_impl_mutex_destroy
020aa644 00000004 T __gthr_impl_mutex_lock
020aa648 00000004 T __gthr_impl_mutex_unlock
020aa64c 00000004 T __gthr_impl_recursive_mutex_init_function
020aa650 00000004 T __gthr_impl_recursive_mutex_lock
020aa654 00000004 T __gthr_impl_recursive_mutex_unlock
020aa658 00000004 T __gthr_impl_cond_init_function
020aa65c 00000004 T __gthr_impl_cond_broadcast
020aa660 00000004 T __gthr_impl_cond_wait_recursive
020aa664 00000004 T __init_wut_stdcpp
020aa668 00000004 T __fini_wut_stdcpp
020aa66c 0000006c T __wut_key_delete(__wut_key_t)
020aa6d8 00000070 T __wut_getspecific(__wut_key_t)
020aa748 00000084 T __wut_setspecific(__wut_key_t, void const*)
020aa7cc 00000004 T __wut_mutex_init_function(OSMutex*)
020aa7e0 00000024 T __wut_mutex_lock(OSMutex*)
020aa814 00000024 T __wut_mutex_unlock(OSMutex*)
020aa848 00000008 T __wut_mutex_destroy(OSMutex*)
020aa850 000000b0 T __wut_once(unsigned int volatile*, void (*)())
020aa930 00000024 T __wut_recursive_mutex_init_function(OSMutex*)
020aa964 00000024 T __wut_recursive_mutex_lock(OSMutex*)
020aa998 00000024 T __wut_recursive_mutex_unlock(OSMutex*)
020aa9cc 000001bc T __init_wut_devoptab
020aabd8 0000008c T __fini_wut_devoptab
020aac84 000000a0 T __wut_fsa_dirclose
020aad54 000001ac T __wut_fsa_dirnext
020aaf30 0000017c T __wut_fsa_diropen
020ab0ec 000000a0 T __wut_fsa_dirreset
020ab1bc 000000d4 T __wut_fsa_fstat
020ab2c0 0000009c T __wut_fsa_fsync
020ab38c 000000e0 T __wut_fsa_mkdir
020ab47c 000004cc T __wut_fsa_open
020ab9b8 000001bc T __wut_fsa_read
020abba4 00000114 T __wut_fsa_rename
020abcc8 000000c4 T __wut_fsa_rmdir
020abd9c 00000188 T __wut_fsa_seek
020abf64 00000118 T __wut_fsa_stat
020ac08c 00000168 T __wut_fsa_statvfs
020ac204 000000c8 T __wut_fsa_ftruncate
020ac30c 000000c4 T __wut_fsa_unlink
020ac3e0 00000040 T __wut_fsa_hashstring
020ac420 00000368 T __wut_fsa_fixpath
020ac788 0000007c T __wut_fsa_translate_stat_mode
020ac804 00000144 T __wut_fsa_translate_stat
020ac948 00000028 T __wut_fsa_translate_error
020ac970 000001d4 T __wut_fsa_write
020acb74 000000cc T __wut_lock_init
020acc60 000000a8 T __wut_lock_close
020acd18 00000054 T __wut_lock_acquire
020acd7c 00000054 T __wut_lock_release
020acde0 000000a8 T sendto
020ace98 00000094 T setsockopt
020acf3c 00000058 T shutdown
020acfa4 000000d0 T socket
020ad084 0000000c T __wut_socket_init_devoptab
020ad090 0000000c T __wut_socket_fini_devoptab
020ad09c 0000008c T __wut_get_nsysnet_fd
020ad128 00000080 T __wut_get_nsysnet_result
020ad1b8 00000010 T __wut_socket_open
020ad1c8 00000048 T __wut_socket_read
020ad220 00000048 T __wut_socket_write
020ad278 00000004 T __wut_cond_init_function(OSCondition*)
020ad28c 00000024 T __wut_cond_broadcast(OSCondition*)
020ad2c0 00000024 T __wut_cond_wait_recursive(OSCondition*, OSMutex*)
020ad2f4 0000011c T __wut_fsa_chdir
020ad420 000000e0 T __wut_fsa_chmod
020ad510 0000009c T __wut_fsa_close
020ad5dc 0000003c T __wut_socket_close
020ad628 0000007c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
020ad6a4 00000018 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
020ad6bc 00000010 T __cxxabiv1::__class_type_info::~__class_type_info()
020ad6bc 00000010 T __cxxabiv1::__class_type_info::~__class_type_info()
020ad6cc 00000040 T __cxxabiv1::__class_type_info::~__class_type_info()
020ad70c 00000090 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
020ad79c 00000100 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
020ad89c 00000134 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
020ad9d0 00000004 T operator delete(void*, unsigned int)
020ad9d4 00000098 t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
020ada6c 0000013c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
020adba8 00000068 t base_of_encoded_value(unsigned char, _Unwind_Context*)
020adc10 00000120 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
020add30 00000138 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long)
020ade68 000008b4 T __gxx_personality_v0
020ae71c 00000020 T __cxxabiv1::__terminate(void (*)())
020ae73c 00000018 T __cxxabiv1::__unexpected(void (*)())
020ae754 00000018 T std::get_terminate()
020ae76c 00000018 T std::get_unexpected()
020ae784 00000080 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
020ae804 00000070 T __cxa_init_primary_exception
020ae874 00000068 T __cxa_throw
020ae8dc 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
020ae8e8 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
020ae8f4 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
020ae900 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
020ae90c 00000010 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
020ae90c 00000010 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
020ae91c 00000040 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
020ae95c 00000010 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
020ae95c 00000010 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
020ae96c 00000040 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
020ae9ac 00000010 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
020ae9ac 00000010 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
020ae9bc 00000040 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
020ae9fc 00000010 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
020ae9fc 00000010 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
020aea0c 00000040 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
020aea4c 0000005c t (anonymous namespace)::init_static_cond()
020aeaa8 00000060 t (anonymous namespace)::init()
020aeb08 00000270 T __cxa_guard_acquire
020aed78 00000100 T __cxa_guard_abort
020aee78 00000118 T __cxa_guard_release
020aef90 00000010 T __gnu_cxx::recursive_init_error::~recursive_init_error()
020aef90 00000010 T __gnu_cxx::recursive_init_error::~recursive_init_error()
020aefa0 00000040 T __gnu_cxx::recursive_init_error::~recursive_init_error()
020aefe0 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
020aefe0 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
020aeff0 00000080 T operator new(unsigned int)
020af070 00000010 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
020af070 00000010 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
020af080 00000040 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
020af0c0 000001b8 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
020af278 000000d4 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
020af34c 00000094 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
020af3e0 00000004 T std::type_info::~type_info()
020af3e0 00000004 T std::type_info::~type_info()
020af3e4 00000008 T std::type_info::__is_pointer_p() const
020af3e4 00000008 T std::type_info::__is_function_p() const
020af3ec 0000000c T std::bad_alloc::what() const
020af3f8 00000010 T std::bad_alloc::~bad_alloc()
020af3f8 00000010 T std::bad_alloc::~bad_alloc()
020af408 00000040 T std::bad_alloc::~bad_alloc()
020af448 00000004 T operator delete(void*)
020af44c 00000154 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
020af5a0 00000114 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
020af6b4 00000068 T __cxa_allocate_exception
020af71c 00000030 T __cxa_free_exception
020af74c 000000c8 T __cxa_begin_catch
020af814 00000004 T std::exception::~exception()
020af814 00000004 T std::exception::~exception()
020af818 0000000c T transaction clone for std::exception::what() const
020af818 0000000c T std::exception::what() const
020af824 00000068 t eh_globals_dtor(void*)
020af88c 000000a0 T __cxa_get_globals
020af92c 00000018 T std::get_new_handler()
020af944 00000078 T fmodf
020af9bc 00000110 T ceilf
020afacc 00000150 T pow
020afc1c 00000084 T logf
020afca0 00000088 T acosf
020afd28 0000010c T floorf
020afe34 00000270 T __ieee754_fmodf
020b00a4 000000d4 T cosf
020b0178 00000334 T __ieee754_acosf
020b04ac 00000070 T sqrtf
020b051c 00000004 T atan2f
020b0520 00000cf0 T __ieee754_pow
020b1210 0000000c T nanf
020b121c 00000150 T powf
020b136c 00000180 T __kernel_cosf
020b14ec 00000084 T log
020b1570 000000d8 T sinf
020b1648 00000028 T finitef
020b1670 00000058 T sincosf
020b16c8 00000020 T finite
020b16e8 00000320 T __ieee754_log
020b1a08 00000160 T __ieee754_sqrtf
020b1b68 00000248 T __ieee754_atan2f
020b1db0 00000278 T atanf
020b2028 000000cc T __kernel_sinf
020b20f4 000002d8 T __ieee754_sqrt
020b23cc 00000028 T fabs
020b23f4 00000038 t with_errno
020b242c 0000002c t xflow
020b2458 0000000c T __math_uflow
020b2464 0000000c T __math_oflow
020b2470 00000418 T __ieee754_rem_pio2f
020b2888 00000020 T fabsf
020b28a8 0000000c T nan
020b28b4 000002f4 T __ieee754_logf
020b2ba8 00000f58 T __kernel_rem_pio2f
020b3b00 00000198 T scalbn
020b3c98 00000aac T __ieee754_powf
020b4744 0000018c T scalbnf
020b48d0 00000038 t with_errnof
020b4908 0000001c t xflowf
020b4924 0000000c T __math_uflowf
020b4930 0000000c T __math_oflowf
020b493c 00000040 T __fixsfdi
020b497c 00000040 T __fixdfdi
020b49bc 000000fc T __fixunssfdi
020b4ab8 000000fc T __fixunsdfdi
020b4bb4 0000009c T __floatdisf
020b4c50 00000050 T __floatdidf
020b4ca0 00000068 T __floatundisf
020b4d08 00000044 T __floatundidf
020b4d4c 00000428 T __divdi3
020b5174 000003cc T __udivdi3
020b5540 0000001c T __gthread_active_p
020b555c 0000001c T __gthread_once
020b5578 0000001c T __gthread_key_create
020b5594 00000044 T __gthread_key_delete
020b55d8 00000044 T __gthread_getspecific
020b561c 00000044 T __gthread_setspecific
020b5660 00000014 T __gthread_mutex_init_function
020b5674 0000001c T __gthread_mutex_destroy
020b5690 0000001c T __gthread_mutex_lock
020b56ac 0000001c T __gthread_mutex_unlock
020b56c8 0000001c T __gthread_recursive_mutex_init_function
020b56e4 0000001c T __gthread_recursive_mutex_lock
020b5700 0000001c T __gthread_recursive_mutex_unlock
020b571c 00000014 T __gthread_cond_init_function
020b5730 0000001c T __gthread_cond_broadcast
020b574c 0000001c T __gthread_cond_wait_recursive
020b5768 000001d0 t init_dwarf_reg_size_table
020b5938 000001fc t uw_install_context_1
020b5b34 0000018c t read_encoded_value
020b5cc0 00000870 t execute_stack_op
020b6530 00000390 t uw_update_context_1
020b68c0 00000954 t execute_cfa_program_specialized
020b7214 000009bc t execute_cfa_program_generic
020b7bd0 000004d8 t uw_frame_state_for
020b80a8 000002d0 t uw_init_context_1
020b8378 000001cc t _Unwind_RaiseException_Phase2
020b8544 000001f0 t _Unwind_ForcedUnwind_Phase2
020b8734 00000064 T _Unwind_SetGR
020b8798 00000014 T _Unwind_GetIPInfo
020b87ac 00000008 T _Unwind_SetIP
020b87b4 00000008 T _Unwind_GetLanguageSpecificData
020b87bc 00000008 T _Unwind_GetRegionStart
020b87c4 00000008 T _Unwind_GetDataRelBase
020b87cc 00000008 T _Unwind_GetTextRelBase
020b87d4 00000004 t _Unwind_DebugHook
020b87d8 0000038c T _Unwind_RaiseException
020b8b64 000001dc T _Unwind_Resume
020b8d40 0000001c T _Unwind_DeleteException
020b8d5c 00000020 t fde_unencoded_compare
020b8d7c 00000074 t fde_unencoded_extract
020b8df0 00000110 t frame_downheap
020b8f00 0000000c t init_object_mutex
020b8f0c 0000013c t read_encoded_value_with_base
020b9048 000002a4 t fde_radixsort
020b92ec 0000012c t __deregister_frame_info_bases.part.0
020b9418 00000158 t get_cie_encoding
020b9570 000000fc t fde_mixed_encoding_extract
020b966c 0000020c t classify_object_over_fdes.constprop.0
020b9878 00000108 t fde_single_encoding_extract
020b9980 000000d0 t fde_single_encoding_compare
020b9a50 00000150 t fde_mixed_encoding_compare
020b9ba0 000002c0 t add_fdes.isra.0
020b9e60 00000360 t linear_search_fdes
020ba1c0 000006e4 t search_object
020ba8a4 000000a0 T __register_frame_info
020ba944 00000020 T __deregister_frame_info
020ba964 00000260 T _Unwind_Find_FDE
020babc4 000001b8 T chdir
020bad7c 0000027c T _concatenate_path
020baff8 000000e4 T __release_handle
020bb0dc 00000124 T __alloc_handle
020bb200 00000090 T __get_handle
020bb290 00000180 T _close_r
020bb410 00000008 t null_write
020bb418 00000018 T setDefaultDevice
020bb430 00000150 T FindDevice
020bb580 00000044 T RemoveDevice
020bb5c4 00000120 T AddDevice
020bb6e4 00000014 T __libc_lock_init
020bb6f8 00000014 T __libc_lock_acquire
020bb70c 00000014 T __libc_lock_release
020bb720 00000014 T __libc_lock_close
020bb734 00000014 T __libc_lock_init_recursive
020bb748 00000104 T strncpy
020bb84c 0000009c T strcmp
020bb8e8 00000020 T toupper
020bb908 00000038 T getenv
020bb940 00000180 T memset
020bbac0 000000d8 T _vsnprintf_r
020bbb98 00000060 T vsnprintf
020bbbf8 00000f44 T qsort
020bcb3c 0000044c T _fread_r
020bcf88 00000060 T fread
020bcfe8 00000008 T atof
020bcff0 00000084 t sulp
020bd074 000018f0 T _strtod_l
020be964 0000008c T _strtod_r
020be9f0 00000090 T strtod
020bea80 00000030 T strdup
020beab0 00000010 T _fseek_r
020beac0 00000054 T fseek
020beb14 0000004c T __locale_mb_cur_max
020beb60 00000154 T strchr
020becb4 000007bc t get_arg
020bf470 000039f8 T _svfprintf_r
020c2e68 00000174 t rshift
020c2fdc 000009f8 T __gethex
020c39d4 000000dc T sscanf
020c3ab0 00000140 t critical_factorization
020c3bf0 00000440 t two_way_long_needle
020c4030 000002c0 T strstr
020c42f0 00000148 T memcpy
020c4438 00000218 t _strtoul_l.isra.0
020c4650 00000060 T _strtoul_r
020c46b0 00000064 T strtoul
020c4714 00000604 T __utf8_mbtowc
020c4d18 000000c8 T strncmp
020c4de0 000001fc T _fwrite_r
020c4fdc 00000060 T fwrite
020c503c 00000104 T _wcrtomb_r
020c5140 000001b8 T memmove
020c52f8 0000001c t stdio_exit_handler
020c5314 00000088 t cleanup_stdio
020c539c 00000184 t global_stdio_init.part.0
020c5520 000001d8 T __sfp
020c56f8 000000a4 T __sinit
020c579c 00000040 T __sfp_lock_acquire
020c57dc 0000000c T __sfp_lock_release
020c57e8 00000040 T calloc
020c5828 0000010c T _reclaim_reent
020c5934 000001e0 T _fclose_r
020c5b14 00000030 T fclose
020c5b44 00000040 t lflush
020c5b84 000001d8 T __srefill_r
020c5d5c 0000009c T printf
020c5df8 00000080 T strlen
020c5e78 00000070 T _strdup_r
020c5ee8 00000340 t quorem
020c6228 00001704 T _dtoa_r
020c792c 000000d0 T sprintf
020c79fc 000000b4 t get_arg
020c7ab0 00002ff4 T __ssvfscanf_r
020caaa4 00000184 T _fopen_r
020cac28 00000040 T fopen
020cac68 00000124 T memcmp
020cad8c 00000260 t _strtol_l.isra.0
020cafec 00000060 T _strtol_r
020cb04c 00000108 T __utf8_wctomb
020cb154 00000030 T close
020cb184 00000078 T strrchr
020cb1fc 000006f8 T _fseeko_r
020cb8f4 0000008c T strcpy
020cb980 00000054 T ftell
020cb9d4 00000118 T stpncpy
020cbaec 00000020 T __errno
020cbb0c 00000058 T malloc
020cbb64 00000030 T free
020cbb94 00000008 T iswspace
020cbb9c 00000120 T _mbrtowc_r
020cbcbc 0000013c T _findenv_r
020cbdf8 000001b0 T __smakebuf_r
020cbfa8 00000130 T snprintf
020cc0d8 00000148 T memchr
020cc220 00000014 T atexit
020cc234 0000010c T __ssprint_r
020cc340 000000c0 T strnlen
020cc400 00000588 T __sfvwrite_r
020cc988 000000f4 T _sungetc_r
020cca7c 00000080 T __ssrefill_r
020ccafc 000000c8 T _sfread_r
020ccbc4 00000054 T __match
020ccc18 00000528 T __hexnan
020cd140 00000074 T __sread
020cd1b4 00000008 T __seofread
020cd1bc 000000b0 T __swrite
020cd26c 00000070 T __sseek
020cd2dc 00000008 T __sclose
020cd2e4 00000300 T __sflush_r
020cd5e4 00000108 T _fflush_r
020cd6ec 00000054 T fflush
020cd740 00000040 T memalign
020cd780 00000090 T frexp
020cd810 000000b4 T _fwalk_sglue
020cd8c4 00000304 t _strtoll_l.isra.0
020cdbc8 00000060 T _strtoll_r
020cdc28 00000040 T __env_lock
020cdc68 0000000c T __env_unlock
020cdc74 000000f4 T _Balloc
020cdd68 00000024 T _Bfree
020cdd8c 00000174 T __multadd
020cdf00 00000154 T __s2b
020ce054 00000098 T __hi0bits
020ce0ec 0000010c T __lo0bits
020ce1f8 00000108 T __i2b
020ce300 00000338 T __multiply
020ce638 0000019c T __pow5mult
020ce7d4 0000026c T __lshift
020cea40 000000dc T __mcmp
020ceb1c 00000314 T __mdiff
020cee30 00000094 T __ulp
020ceec4 000001a4 T __b2d
020cf068 00000194 T __d2b
020cf1fc 000000e8 T __ratio
020cf2e4 0000011c T __copybits
020cf400 000000e4 T __any_on
020cf4e4 0000004c T _localeconv_r
020cf530 000007bc t get_arg
020cfcec 00003b00 T _vfprintf_r
020d37ec 000000f4 t __sbprintf
020d38e0 0000016c T __sccl
020d3a4c 00000010 T _wcsrtombs_r
020d3a5c 000000a8 T __sflags
020d3b04 00000258 T _ftello_r
020d3d5c 00000060 T iswspace_l
020d3dbc 000002f8 t _strtoull_l.isra.0
020d40b4 00000060 T _strtoull_r
020d4114 00000194 T __ssputs_r
020d42a8 00000040 T realloc
020d42e8 0000017c T __swsetup_r
020d4464 000001e4 T _wcsnrtombs_l
020d4648 000000d8 T _wcsnrtombs_r
020d4720 0000012c T __register_exitproc
020d484c 000000e8 T __submore
020d4934 000000d8 T category
020d4a0c 00000054 T __sprint_r
020d4a60 00000038 T __flockfile
020d4a98 00000008 T __funlockfile
020d4aa0 000000c8 T _fstat_r
020d4b68 00000008 T _isatty_r
020d4b70 000000f4 T _lseek_r
020d4c64 0000012c T _open_r
020d4d90 000000d8 T _read_r
020d4e68 000000d8 T _write_r
020d4f40 00000384 T __umoddi3
020d52c4 00000058 T _restfpr_14_x
020d52c8 00000054 T _restfpr_15_x
020d52cc 00000050 T _restfpr_16_x
020d52d0 0000004c T _restfpr_17_x
020d52d4 00000048 T _restfpr_18_x
020d52d8 00000044 T _restfpr_19_x
020d52dc 00000040 T _restfpr_20_x
020d52e0 0000003c T _restfpr_21_x
020d52e4 00000038 T _restfpr_22_x
020d52e8 00000034 T _restfpr_23_x
020d52ec 00000030 T _restfpr_24_x
020d52f0 0000002c T _restfpr_25_x
020d52f4 00000028 T _restfpr_26_x
020d52f8 00000024 T _restfpr_27_x
020d52fc 00000020 T _restfpr_28_x
020d5300 0000001c T _restfpr_29_x
020d5304 00000018 T _restfpr_30_x
020d5308 00000014 T _restfpr_31_x
020d531c 00000058 T _restgpr_14_x
020d5320 00000054 T _restgpr_15_x
020d5324 00000050 T _restgpr_16_x
020d5328 0000004c T _restgpr_17_x
020d532c 00000048 T _restgpr_18_x
020d5330 00000044 T _restgpr_19_x
020d5334 00000040 T _restgpr_20_x
020d5338 0000003c T _restgpr_21_x
020d533c 00000038 T _restgpr_22_x
020d5340 00000034 T _restgpr_23_x
020d5344 00000030 T _restgpr_24_x
020d5348 0000002c T _restgpr_25_x
020d534c 00000028 T _restgpr_26_x
020d5350 00000024 T _restgpr_27_x
020d5354 00000020 T _restgpr_28_x
020d5358 0000001c T _restgpr_29_x
020d535c 00000018 T _restgpr_30_x
020d5360 00000014 T _restgpr_31_x
020d5374 t __do_global_ctors_aux
020d53c4 T __fini
1000174c d .LC318
100049bc d .LC742
10005658 d .LC910
1001ab30 d .LC564
1001af4c d .LC2
1001de98 d .LC1
1001dfc8 d .LC1
1001ed78 00000400 d GCrc32LookupTable
1001f178 00000020 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::lengths
1001f198 00000014 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::masks
1001f1ac 00000014 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::shiftc
1001f1c0 00000014 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::mins
1001f1d4 00000014 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::shifte
1001f1e8 00000070 d resize_border_def
1001f258 00000150 d GStyleVarInfo
1001f3a8 000000d4 d CSWTCH.2146
1001f47c 00000230 d GKeyNames
1001f6cc 00000040 d GLocalizationEntriesEnUS
1001f85c 00000060 d resize_grip_def
10020030 0000003c d EditTableSizingFlags(int*)::policies
1002006c 000000b4 d ShowDemoWindowTables()::nodes
1002042c 0000003c d ShowDemoWindowTables()::template_items_names
10020cc0 000000d8 d FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA
10020d98 00000cdf d FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS
10021a78 00000006 d ImFontAtlas::GetGlyphRangesDefault()::ranges
10021a80 0000000a d ImFontAtlas::GetGlyphRangesGreek()::ranges
10021a8c 00000012 d ImFontAtlas::GetGlyphRangesKorean()::ranges
10021aa0 0000001e d ImFontAtlas::GetGlyphRangesChineseFull()::ranges
10021ac0 00000018 d ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon()::base_ranges
10021ad8 00001388 d ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon()::accumulative_offsets_from_0x4E00
10022e60 00000014 d ImFontAtlas::GetGlyphRangesJapanese()::base_ranges
10022e74 0000176e d ImFontAtlas::GetGlyphRangesJapanese()::accumulative_offsets_from_0x4E00
100245e4 00000012 d ImFontAtlas::GetGlyphRangesCyrillic()::ranges
100245f8 0000000e d ImFontAtlas::GetGlyphRangesThai()::ranges
10024608 00000022 d ImFontAtlas::GetGlyphRangesVietnamese()::ranges
1002462c 00002ecd d proggy_clean_ttf_compressed_data_base85
100276a0 000000a0 d GDataTypeInfo
10027740 00000028 d GetMinimumStepAtDecimalPrecision(int)::min_steps
10027768 00000010 d ImGui::ColorEdit4(char const*, float*, int)::ids
10027778 00000030 d ImGui::ColorEdit4(char const*, float*, int)::fmt_table_float
100277a8 00000030 d ImGui::ColorEdit4(char const*, float*, int)::fmt_table_int
100277d8 0000002f V typeinfo name for std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>
10027808 00000018 V typeinfo name for std::_Sp_make_shared_tag
10027820 00000034 V typeinfo name for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>
10027854 0000000c V typeinfo for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>
10027860 00000048 V typeinfo name for std::_Sp_counted_ptr_inplace<Overlay, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
100278a8 0000000c V typeinfo for std::_Sp_counted_ptr_inplace<Overlay, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
100278b4 0000001c V vtable for std::_Sp_counted_ptr_inplace<Overlay, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
100278d0 00000014 d __FUNCTION__.0
100278e4 00000012 d __FUNCTION__.1
100278f8 00000022 d __FUNCTION__.2
1002791c 00000016 d __FUNCTION__.3
10027934 00000018 d __FUNCTION__.4
1002794c 00000080 d __wut_fsa_devoptab
100279cc 00000042 d CSWTCH.24
10027a10 00000034 d __wut_nsysnet_error_code_map
10027a44 00000022 V typeinfo name for __cxxabiv1::__class_type_info
10027a68 0000000c V typeinfo for __cxxabiv1::__class_type_info
10027a74 0000002c V vtable for __cxxabiv1::__class_type_info
10027ad4 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
10027afc 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
10027b08 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
10027b34 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
10027b40 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
10027b6c 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
10027b78 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
10027ba0 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
10027bac 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
10027bc0 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
10027bd4 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
10027be8 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
10027bfc 00000023 V typeinfo name for __gnu_cxx::recursive_init_error
10027c20 0000000c V typeinfo for __gnu_cxx::recursive_init_error
10027c2c 00000014 V vtable for __gnu_cxx::recursive_init_error
10027c40 00000025 V typeinfo name for __cxxabiv1::__si_class_type_info
10027c68 0000000c V typeinfo for __cxxabiv1::__si_class_type_info
10027c74 0000002c V vtable for __cxxabiv1::__si_class_type_info
10027ca0 0000000d V typeinfo name for std::type_info
10027cb0 0000000d V typeinfo name for std::bad_alloc
10027cc0 0000000c V typeinfo for std::bad_alloc
10027ccc 00000014 V vtable for std::bad_alloc
10027ce0 0000000d V typeinfo name for std::exception
10027cf0 00000020 V typeinfo name for __cxxabiv1::__forced_unwind
10027d10 00000024 V typeinfo name for __cxxabiv1::__foreign_exception
10027d34 00000008 d Zero
10027d3c 00000004 d tiny
10027d40 00000004 d one
10027d44 0000000c d CSWTCH.7
10027d50 0000000c d CSWTCH.6
10027d5c 00000010 d atanlo
10027d6c 00000010 d atanhi
10027d80 00000008 d tiny
10027d88 00000008 d one
10027d90 00000080 d npio2_hw
10027e10 00000318 d two_over_pi
10028128 0000002c d PIo2
10028154 0000000c d init_jk
100285fc 00000008 d terminator.0
10028604 00000080 D dotab_stdnull
10028754 00000014 d fpinan.0
10028768 00000014 d fpi.1
10028780 00000028 d tinytens
10028a04 00000010 d zeroes.0
10028a14 00000010 d blanks.1
10028a24 00000100 D __hexdig
10028df8 00000022 d basefix.0
10028e1c 0000006c D __action_table
10028e88 0000006c D __state_table
10028ef4 00000100 D __chclass
10028ff4 00000101 D _ctype_
100290f8 0000000c d p05.0
10029108 00000028 D __mprec_bigtens
10029130 000000c8 D __mprec_tens
10029414 00000010 d zeroes.0
10029424 00000010 d blanks.1
10029434 000035dc d categories
1002cf0c d __CTOR_LIST__
1002cf14 D __CTOR_LIST__
1002cf1c d __CTOR_END__
1002cf1c D __CTOR_END__
1002cf20 d __DTOR_LIST__
1002cf24 D __DTOR_LIST__
1002cf30 D __DTOR_END__
1002cf34 d __EH_FRAME_BEGIN__
1002cf34 D __EH_FRAME_BEGIN__
10044ccc D __EH_FRAME_END__
10044ccc d __FRAME_END__
10044cd0 00000004 d GImAllocatorFreeFunc
10044cd4 00000004 d GImAllocatorAllocFunc
10044cd8 00000020 d ShowPlaceholderObject(char const*, int)::placeholder_members
10044cf8 00000001 d ShowExampleMenuFile()::enabled
10044cfc 00000004 d ShowExampleMenuFile()::f
10044d00 00000001 d ShowExampleMenuFile()::b
10044d04 00000004 d ShowDemoWindowColumns()::selected
10044d08 00000004 d ShowDemoWindowColumns()::columns_count
10044d0c 00000001 d ShowDemoWindowColumns()::h_borders
10044d0d 00000001 d ShowDemoWindowColumns()::v_borders
10044d10 00000004 d ShowDemoWindowColumns()::foo
10044d14 00000004 d ShowDemoWindowColumns()::bar
10044d18 00000004 d ShowDemoWindowPopups()::selected_fish
10044d1c 00000005 d ShowDemoWindowPopups()::toggles
10044d24 00000004 d ShowDemoWindowPopups()::selected
10044d28 00000004 d ShowDemoWindowPopups()::value
10044d2c 00000020 d ShowDemoWindowPopups()::name
10044d4c 00000004 d ShowDemoWindowPopups()::item
10044d50 00000010 d ShowDemoWindowPopups()::color
10044d60 00000004 d ShowExampleAppCustomRendering(bool*)::sz
10044d64 00000004 d ShowExampleAppCustomRendering(bool*)::thickness
10044d68 00000004 d ShowExampleAppCustomRendering(bool*)::ngon_sides
10044d6c 00000004 d ShowExampleAppCustomRendering(bool*)::circle_segments_override_v
10044d70 00000004 d ShowExampleAppCustomRendering(bool*)::curve_segments_override_v
10044d74 00000010 d ShowExampleAppCustomRendering(bool*)::colf
10044d84 00000001 d ShowExampleAppCustomRendering(bool*)::opt_enable_grid
10044d85 00000001 d ShowExampleAppCustomRendering(bool*)::opt_enable_context_menu
10044d86 00000001 d ShowExampleAppCustomRendering(bool*)::draw_bg
10044d87 00000001 d ShowExampleAppCustomRendering(bool*)::draw_fg
10044d88 00000001 d ShowDemoWindowLayout()::show_indented_items
10044d8c 00000004 d ShowDemoWindowLayout()::item
10044d90 00000004 d ShowDemoWindowLayout()::f0
10044d94 00000004 d ShowDemoWindowLayout()::f1
10044d98 00000004 d ShowDemoWindowLayout()::f2
10044d9c 00000010 d ShowDemoWindowLayout()::selection
10044dac 00000001 d ShowDemoWindowLayout()::enable_track
10044db0 00000004 d ShowDemoWindowLayout()::track_item
10044db4 00000004 d ShowDemoWindowLayout()::scroll_to_pos_px
10044db8 00000004 d ShowDemoWindowLayout()::lines
10044dbc 00000004 d ShowDemoWindowLayout()::contents_size_x
10044dc0 00000001 d ShowDemoWindowLayout()::show_h_scrollbar
10044dc1 00000001 d ShowDemoWindowLayout()::show_button
10044dc2 00000001 d ShowDemoWindowLayout()::show_tree_nodes
10044dc3 00000001 d ShowDemoWindowLayout()::show_columns
10044dc4 00000001 d ShowDemoWindowLayout()::show_tab_bar
10044dc8 00000008 d ShowDemoWindowLayout()::size
10044dd0 00000008 d ShowDemoWindowLayout()::offset
10044dd8 00000001 d ShowDemoWindowLayout()::enable_allow_overlap
10044ddc 00000004 d ShowDemoWindowInputs()::capture_override_mouse
10044de0 00000004 d ShowDemoWindowInputs()::capture_override_keyboard
10044de4 00000020 d ShowDemoWindowInputs()::buf
10044e04 00000080 d ShowDemoWindowInputs()::buf
10044e84 00000010 d ShowDemoWindowWidgets()::ref_color_v
10044e94 00000001 d ShowDemoWindowWidgets()::check
10044e98 00000080 d ShowDemoWindowWidgets()::str0
10044f18 00000004 d ShowDemoWindowWidgets()::i0
10044f1c 00000004 d ShowDemoWindowWidgets()::f0
10044f20 00000008 d ShowDemoWindowWidgets()::d0
10044f28 00000004 d ShowDemoWindowWidgets()::f1
10044f2c 00000010 d ShowDemoWindowWidgets()::vec4a
10044f3c 00000004 d ShowDemoWindowWidgets()::i1
10044f40 00000004 d ShowDemoWindowWidgets()::i2
10044f44 00000004 d ShowDemoWindowWidgets()::f1
10044f48 00000004 d ShowDemoWindowWidgets()::f2
10044f4c 00000004 d ShowDemoWindowWidgets()::f1
10044f50 0000000c d ShowDemoWindowWidgets()::col1
10044f5c 00000010 d ShowDemoWindowWidgets()::col2
10044f6c 00000004 d ShowDemoWindowWidgets()::item_current
10044f70 0000001c d ShowDemoWindowWidgets()::arr
10044f8c 00000004 d ShowDemoWindowWidgets()::base_flags
10044f90 00000004 d ShowDemoWindowWidgets()::selection_mask
10044f94 00000001 d ShowDemoWindowWidgets()::closable_group
10044f98 00000004 d ShowDemoWindowWidgets()::wrap_width
10044f9c 00000020 d ShowDemoWindowWidgets()::buf
10044fbc 00000004 d ShowDemoWindowWidgets()::item_current_3
10044fc0 00000005 d ShowDemoWindowWidgets()::selection
10044fc8 00000004 d ShowDemoWindowWidgets()::selected
10044fcc 00000010 d ShowDemoWindowWidgets()::selected
10044fdc 00000009 d ShowDemoWindowWidgets()::selected
10044fe8 00000004 d ShowDemoWindowWidgets()::flags
10044fec 00004000 d ShowDemoWindowWidgets()::text
10048fec 00000040 d ShowDemoWindowWidgets()::password
1004902c 00000004 d ShowDemoWindowWidgets()::flags
10049030 00000004 d ShowDemoWindowWidgets()::tab_bar_flags
10049034 00000004 d ShowDemoWindowWidgets()::opened
10049038 00000001 d ShowDemoWindowWidgets()::show_leading_button
10049039 00000001 d ShowDemoWindowWidgets()::show_trailing_button
1004903c 00000004 d ShowDemoWindowWidgets()::tab_bar_flags
10049040 00000001 d ShowDemoWindowWidgets()::animate
10049044 0000001c d ShowDemoWindowWidgets()::arr
10049060 00000004 d ShowDemoWindowWidgets()::display_count
10049064 00000004 d ShowDemoWindowWidgets()::progress_dir
10049068 00000001 d ShowDemoWindowWidgets()::alpha_preview
10049069 00000001 d ShowDemoWindowWidgets()::drag_and_drop
1004906a 00000001 d ShowDemoWindowWidgets()::options_menu
1004906c 00000010 d ShowDemoWindowWidgets()::color
1004907c 00000001 d ShowDemoWindowWidgets()::saved_palette_init
1004907d 00000001 d ShowDemoWindowWidgets()::alpha
1004907e 00000001 d ShowDemoWindowWidgets()::alpha_bar
1004907f 00000001 d ShowDemoWindowWidgets()::side_preview
10049080 00000010 d ShowDemoWindowWidgets()::color_hsv
10049090 00000004 d ShowDemoWindowWidgets()::drag_f
10049094 00000004 d ShowDemoWindowWidgets()::drag_i
10049098 00000004 d ShowDemoWindowWidgets()::slider_f
1004909c 00000004 d ShowDemoWindowWidgets()::slider_i
100490a0 00000004 d ShowDemoWindowWidgets()::end
100490a4 00000004 d ShowDemoWindowWidgets()::begin
100490a8 00000004 d ShowDemoWindowWidgets()::end_i
100490ac 00000004 d ShowDemoWindowWidgets()::begin_i
100490b0 00000001 d ShowDemoWindowWidgets()::s8_v
100490b1 00000001 d ShowDemoWindowWidgets()::u8_v
100490b2 00000002 d ShowDemoWindowWidgets()::s16_v
100490b4 00000002 d ShowDemoWindowWidgets()::u16_v
100490b8 00000004 d ShowDemoWindowWidgets()::s32_v
100490bc 00000004 d ShowDemoWindowWidgets()::u32_v
100490c0 00000008 d ShowDemoWindowWidgets()::s64_v
100490c8 00000008 d ShowDemoWindowWidgets()::u64_v
100490d0 00000004 d ShowDemoWindowWidgets()::f32_v
100490d8 00000008 d ShowDemoWindowWidgets()::f64_v
100490e0 00000001 d ShowDemoWindowWidgets()::inputs_step
100490e4 00000010 d ShowDemoWindowWidgets()::vec4f
100490f4 00000010 d ShowDemoWindowWidgets()::vec4i
10049104 0000001c d ShowDemoWindowWidgets()::values
10049120 00000010 d ShowDemoWindowWidgets()::values2
10049130 0000000c d ShowDemoWindowWidgets()::col1
1004913c 00000010 d ShowDemoWindowWidgets()::col2
1004914c 00000024 d ShowDemoWindowWidgets()::names
10049170 00000014 d ShowDemoWindowWidgets()::item_names
10049184 00000004 d ShowDemoWindowWidgets()::item_type
10049188 00000010 d ShowDemoWindowWidgets()::col4f
10049198 00000004 d ShowDemoWindowWidgets()::current
1004919c 00000004 d ShowDemoWindowWidgets()::current
100491a0 00000004 d ShowDemoWindowTables()::flags
100491a4 00000004 d ShowDemoWindowTables()::flags
100491a8 00000004 d ShowDemoWindowTables()::flags
100491ac 00000004 d ShowDemoWindowTables()::flags
100491b0 00000004 d ShowDemoWindowTables()::flags1
100491b4 00000004 d ShowDemoWindowTables()::flags2
100491b8 00000001 d ShowDemoWindowTables()::show_widget_frame_bg
100491b9 00000001 d ShowDemoWindowTables()::init
100491bc 00000004 d ShowDemoWindowTables()::flags1
100491c0 00000010 d ShowDemoWindowTables()::sizing_policy_flags
100491d0 00000004 d ShowDemoWindowTables()::flags
100491d4 00000004 d ShowDemoWindowTables()::column_count
100491d8 00000004 d ShowDemoWindowTables()::flags
100491dc 00000004 d ShowDemoWindowTables()::flags
100491e0 00000004 d ShowDemoWindowTables()::freeze_cols
100491e4 00000004 d ShowDemoWindowTables()::freeze_rows
100491e8 00000004 d ShowDemoWindowTables()::flags2
100491ec 00000004 d ShowDemoWindowTables()::inner_width
100491f0 0000000c d ShowDemoWindowTables()::column_flags
100491fc 00000004 d ShowDemoWindowTables()::flags1
10049200 00000004 d ShowDemoWindowTables()::flags
10049204 00000004 d ShowDemoWindowTables()::flags
10049208 00000004 d ShowDemoWindowTables()::row_bg_type
1004920c 00000004 d ShowDemoWindowTables()::row_bg_target
10049210 00000004 d ShowDemoWindowTables()::cell_bg_type
10049214 00000004 d ShowDemoWindowTables()::flags1
10049218 00000004 d ShowDemoWindowTables()::flags
1004921c 00000004 d ShowDemoWindowTables()::flags
10049220 00000004 d ShowDemoWindowTables()::flags
10049224 00000004 d ShowDemoWindowTables()::freeze_cols
10049228 00000004 d ShowDemoWindowTables()::freeze_rows
1004922c 00000001 d ShowDemoWindowTables()::show_headers
1004922d 00000001 d ShowDemoWindowTables()::outer_size_enabled
10049230 00000004 d ShowDemoWindowTables()::items_count
10049234 00000004 d ShowDemoWindowTables()::contents_type
10049238 00000004 d ImGui::ShowStyleSelector(char const*)::style_idx
1004923c 00000001 d ImGui::ShowStyleEditor(ImGuiStyle*)::init
1004923d 00000001 d ImGui::ShowStyleEditor(ImGuiStyle*)::output_only_modified
10049240 00000004 d ImGui::ShowStyleEditor(ImGuiStyle*)::window_scale
10049244 00000004 d ShowExampleAppAutoResize(bool*)::lines
10049248 00000004 d ShowExampleAppConstrainedResize(bool*)::type
1004924c 00000001 d ShowExampleAppConstrainedResize(bool*)::window_padding
10049250 00000004 d ShowExampleAppConstrainedResize(bool*)::display_lines
10049254 00000001 d ShowExampleAppFullscreen(bool*)::use_work_area
10049258 00000004 d ShowExampleAppFullscreen(bool*)::flags
1004925c 00000004 D real_GX2SetContextState
10049260 00000004 D real_GX2SetupContextStateEx
10049264 00000004 D real_GX2SetTVBuffer
10049268 00000004 D real_GX2SetDRCBuffer
1004926c 00000004 D real_GX2SwapScanBuffers
10049270 00000004 D real_VPADRead
10049274 00000004 D real_GX2GetCurrentScanBuffer
10049278 00000004 D real_GX2Init
1004927c 00000004 D real_WPADRead
10049280 00000004 D real_GX2CopyColorBufferToScanBuffer
10049284 00000004 D real_GX2MarkScanBufferCopied
10049288 000006c4 D TexShaderData
1004994c 00000004 d sConfigPluginIdentifier
10049950 00000004 d sConfigAPIVersion
10049954 00000028 d __internal_functions
1004997c 00000004 d sSocket
10049980 00000080 d __wut_socket_devoptab
10049a00 00000400 d _current_working_directory
10049e00 00001000 d handles
1004ae00 0000000c d __stderr_handle
1004ae0c 0000000c d __stdout_handle
1004ae18 0000000c d __stdin_handle
1004ae24 0000008c D devoptab_list
1004aeb0 00000004 d defaultDevice
1004aeb8 00000140 D _impure_data
1004aff8 0000016c D __global_locale
1004b164 0000000c D __sglue
1004b170 00000004 D drcSurfaceFmt
1004b174 00000004 D tvSurfaceFmt
1004b178 00000008 V typeinfo for std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>
1004b180 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
1004b188 00000004 D __cxxabiv1::__unexpected_handler
1004b18c 00000008 V typeinfo for std::type_info
1004b194 00000008 V typeinfo for std::exception
1004b19c 00000008 V typeinfo for __cxxabiv1::__forced_unwind
1004b1a4 00000008 V typeinfo for __cxxabiv1::__foreign_exception
1004b1ac 00000004 D __cxxabiv1::__terminate_handler
1004b1b0 00000004 D _impure_ptr
1004b1b4 00000004 D environ
1004b1b8 00000001 B ImGuiTextBuffer::EmptyString
1004b1bc 00000004 B GImGui
1004b1c0 00000004 B GImGuiDemoMarkerCallbackUserData
1004b1c4 00000004 B GImGuiDemoMarkerCallback
1004b1c8 00000001 B init
1004b1cc 00000004 B originalCtxState
1004b1d0 00000004 B gMEM2
1004b1d4 00000004 B gOverlayUpdateThread
1004b1d8 00000008 B gOverlay
1004b1e0 00000001 B gDrawAllowed
1004b1e4 00000004 B gCtxState
1004b1e8 00000004 B udpLogInit
1004b1ec 00000004 B cafeLogInit
1004b1f0 00000004 B moduleLogInit
1004b1f4 00000004 B __wut_exit
1004b1f8 00000001 B __eh_globals_init::_S_init
1004b1fc 00000004 B __stdio_exit_handler
1004b200 00000004 B __atexit
1004b204 00000004 B __atexit_recursive_mutex
1004b208 b completed.2
1004b20c b dtor_idx.1
1004b210 b object.0
1004b228 00000004 b GImAllocatorUserData
1004b22c 00000064 b ImGui::ShowMetricsWindow(bool*)::buf
1004b290 0000000c b ShowDemoWindowTables()::items
1004b29c 0000000c b ShowDemoWindowTables()::items
1004b2a8 0000000c b ShowExampleAppLongText(bool*)::log
1004b2b4 0000000c b ShowDemoWindowWidgets()::my_str
1004b2c0 0000000c b ShowExampleAppCustomRendering(bool*)::points
1004b2cc 0000000c b ShowDemoWindowWidgets()::active_tabs
1004b2d8 0000000c b ShowDemoWindowTables()::selection
1004b2e4 0000012c b ShowExampleAppLog(bool*)::log
1004b410 00000110 b ShowDemoWindowWidgets()::filter
1004b520 00000110 b ImGui::ShowStyleEditor(ImGuiStyle*)::filter
1004b630 0000000c b ShowExampleAppDocuments(bool*)::app
1004b63c 0000000c b ShowExampleAppDocuments(bool*)::close_queue
1004b648 00000004 b ShowExampleMenuFile()::n
1004b64c 00000004 b (anonymous namespace)::MyItem::s_current_sort_specs
1004b650 0000023c b ShowExampleAppConsole(bool*)::console
1004b88c 00000001 b ShowDemoWindowPopups()::dont_ask_me_next_time
1004b88d 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_custom_rendering
1004b88e 00000001 b ShowExampleAppCustomRendering(bool*)::circle_segments_override
1004b88f 00000001 b ShowExampleAppCustomRendering(bool*)::curve_segments_override
1004b890 00000008 b guard variable for ShowExampleAppCustomRendering(bool*)::points
1004b898 00000008 b ShowExampleAppCustomRendering(bool*)::scrolling
1004b8a0 00000001 b ShowExampleAppCustomRendering(bool*)::adding_line
1004b8a1 00000001 b ShowDemoWindowLayout()::disable_mouse_wheel
1004b8a2 00000001 b ShowDemoWindowLayout()::disable_menu
1004b8a4 00000004 b ShowDemoWindowLayout()::offset_x
1004b8a8 00000004 b ShowDemoWindowLayout()::f
1004b8ac 00000001 b ShowDemoWindowLayout()::c1
1004b8ad 00000001 b ShowDemoWindowLayout()::c2
1004b8ae 00000001 b ShowDemoWindowLayout()::c3
1004b8af 00000001 b ShowDemoWindowLayout()::c4
1004b8b0 00000001 b ShowDemoWindowLayout()::enable_extra_decorations
1004b8b4 00000004 b ShowDemoWindowLayout()::scroll_to_off_px
1004b8b8 00000001 b ShowDemoWindowLayout()::show_horizontal_contents_size_demo_window
1004b8b9 00000001 b ShowDemoWindowLayout()::explicit_content_size
1004b8ba 00000001 b ShowDemoWindowLayout()::show_text_wrapped
1004b8bb 00000001 b ShowDemoWindowLayout()::show_child
1004b8bc 0000000c b ShowDemoWindowInputs()::f3
1004b8c8 00000001 b ShowDemoWindowWidgets()::disable_all
1004b8cc 00000004 b ShowDemoWindowWidgets()::clicked
1004b8d0 00000004 b ShowDemoWindowWidgets()::e
1004b8d4 00000004 b ShowDemoWindowWidgets()::counter
1004b8d8 00000080 b ShowDemoWindowWidgets()::str1
1004b958 00000004 b ShowDemoWindowWidgets()::i1
1004b95c 00000004 b ShowDemoWindowWidgets()::f2
1004b960 00000004 b ShowDemoWindowWidgets()::angle
1004b964 00000004 b ShowDemoWindowWidgets()::elem
1004b968 00000004 b ShowDemoWindowWidgets()::item_current
1004b96c 00000004 b ShowDemoWindowWidgets()::always_on
1004b970 00000001 b ShowDemoWindowWidgets()::align_label_with_current_x_position
1004b971 00000001 b ShowDemoWindowWidgets()::test_drag_and_drop
1004b972 00000001 b ShowDemoWindowWidgets()::use_text_color_for_tint
1004b974 00000004 b ShowDemoWindowWidgets()::pressed_count
1004b978 00000004 b ShowDemoWindowWidgets()::flags
1004b97c 00000004 b ShowDemoWindowWidgets()::item_current_idx
1004b980 00000004 b ShowDemoWindowWidgets()::item_current_2
1004b984 00000004 b ShowDemoWindowWidgets()::item_current_4
1004b988 00000004 b ShowDemoWindowWidgets()::item_current_idx
1004b98c 00000005 b ShowDemoWindowWidgets()::selection
1004b994 00000003 b ShowDemoWindowWidgets()::selected
1004b998 0000000a b ShowDemoWindowWidgets()::selected
1004b9a4 00000020 b ShowDemoWindowWidgets()::buf1
1004b9c4 00000020 b ShowDemoWindowWidgets()::buf2
1004b9e4 00000020 b ShowDemoWindowWidgets()::buf3
1004ba04 00000020 b ShowDemoWindowWidgets()::buf4
1004ba24 00000020 b ShowDemoWindowWidgets()::buf5
1004ba44 00000020 b ShowDemoWindowWidgets()::buf6
1004ba64 00000020 b ShowDemoWindowWidgets()::buf7
1004ba84 00000040 b ShowDemoWindowWidgets()::buf1
1004bac4 00000040 b ShowDemoWindowWidgets()::buf2
1004bb04 00000004 b ShowDemoWindowWidgets()::edit_count
1004bb08 00000040 b ShowDemoWindowWidgets()::buf3
1004bb48 00000008 b guard variable for ShowDemoWindowWidgets()::my_str
1004bb50 00000010 b ShowDemoWindowWidgets()::buf1
1004bb60 00000008 b guard variable for ShowDemoWindowWidgets()::active_tabs
1004bb68 00000004 b ShowDemoWindowWidgets()::next_tab_id
1004bb70 00000008 b ShowDemoWindowWidgets()::refresh_time
1004bb78 00000004 b ShowDemoWindowWidgets()::phase
1004bb7c 00000004 b ShowDemoWindowWidgets()::values_offset
1004bb80 00000168 b ShowDemoWindowWidgets()::values
1004bce8 00000004 b ShowDemoWindowWidgets()::func_type
1004bcec 00000004 b ShowDemoWindowWidgets()::progress
1004bcf0 00000001 b ShowDemoWindowWidgets()::alpha_half_preview
1004bcf1 00000001 b ShowDemoWindowWidgets()::hdr
1004bcf4 00000200 b ShowDemoWindowWidgets()::saved_palette
1004bef4 00000010 b ShowDemoWindowWidgets()::backup_color
1004bf04 00000001 b ShowDemoWindowWidgets()::no_border
1004bf05 00000001 b ShowDemoWindowWidgets()::ref_color
1004bf08 00000004 b ShowDemoWindowWidgets()::display_mode
1004bf0c 00000004 b ShowDemoWindowWidgets()::flags
1004bf10 00000001 b ShowDemoWindowWidgets()::drag_clamp
1004bf14 00000004 b ShowDemoWindowWidgets()::int_value
1004bf18 00000004 b ShowDemoWindowWidgets()::mode
1004bf1c 00000001 b ShowDemoWindowWidgets()::item_disabled
1004bf1d 00000001 b ShowDemoWindowWidgets()::b
1004bf20 00000010 b ShowDemoWindowWidgets()::str
1004bf30 00000001 b ShowDemoWindowWidgets()::embed_all_inside_a_child_window
1004bf31 00000001 b ShowDemoWindowWidgets()::test_window
1004bf38 00000008 b guard variable for ShowDemoWindowWidgets()::filter
1004bf40 00000001 b ShowDemoWindowTables()::disable_indent
1004bf44 00000004 b ShowDemoWindowTables()::contents_type
1004bf48 00000001 b ShowDemoWindowTables()::display_headers
1004bf49 00000001 b ShowDemoWindowTables()::show_headers
1004bf4c 00000008 b ShowDemoWindowTables()::cell_padding
1004bf54 000000f0 b ShowDemoWindowTables()::text_bufs
1004c044 00000004 b ShowDemoWindowTables()::contents_type
1004c048 00000020 b ShowDemoWindowTables()::text_buf
1004c068 0000000c b ShowDemoWindowTables()::column_flags_out
1004c074 00000004 b ShowDemoWindowTables()::flags2
1004c078 00000004 b ShowDemoWindowTables()::dummy_f
1004c07c 00000003 b ShowDemoWindowTables()::column_selected
1004c080 00000008 b guard variable for ShowDemoWindowTables()::items
1004c088 00000008 b guard variable for ShowDemoWindowTables()::outer_size_value
1004c090 00000008 b ShowDemoWindowTables()::outer_size_value
1004c098 00000001 b ShowDemoWindowTables()::show_wrapped_text
1004c09c 00000004 b ShowDemoWindowTables()::inner_width_with_scroll
1004c0a0 00000004 b ShowDemoWindowTables()::row_min_height
1004c0a8 00000008 b guard variable for ShowDemoWindowTables()::items
1004c0b0 00000008 b guard variable for ShowDemoWindowTables()::selection
1004c0b8 00000001 b ShowDemoWindowTables()::show_debug_details
1004c0b9 00000001 b ShowDemoWindowTables()::items_need_sort
1004c0ba 00000001 b ImGui::ShowAboutWindow(bool*)::show_config_info
1004c0bc 00000440 b ImGui::ShowStyleEditor(ImGuiStyle*)::ref_saved_style
1004c500 00000008 b guard variable for ImGui::ShowStyleEditor(ImGuiStyle*)::ref_saved_style
1004c508 00000004 b ImGui::ShowStyleEditor(ImGuiStyle*)::output_dest
1004c510 00000008 b guard variable for ImGui::ShowStyleEditor(ImGuiStyle*)::filter
1004c518 00000004 b ImGui::ShowStyleEditor(ImGuiStyle*)::alpha_flags
1004c520 00000008 b guard variable for ShowExampleAppDocuments(bool*)::app
1004c528 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_documents
1004c530 00000008 b guard variable for ShowExampleAppDocuments(bool*)::close_queue
1004c538 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_main_menu_bar
1004c539 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_console
1004c540 00000008 b guard variable for ShowExampleAppConsole(bool*)::console
1004c548 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_log
1004c550 00000008 b guard variable for ShowExampleAppLog(bool*)::log
1004c558 00000004 b ShowExampleAppLog(bool*)::counter
1004c55c 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_layout
1004c560 00000004 b ShowExampleAppLayout(bool*)::selected
1004c564 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_property_editor
1004c565 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_simple_overlay
1004c568 00000004 b ShowExampleAppSimpleOverlay(bool*)::location
1004c56c 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_auto_resize
1004c56d 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_constrained_resize
1004c56e 00000001 b ShowExampleAppConstrainedResize(bool*)::auto_resize
1004c56f 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_fullscreen
1004c570 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_long_text
1004c578 00000008 b guard variable for ShowExampleAppLongText(bool*)::log
1004c580 00000004 b ShowExampleAppLongText(bool*)::test_type
1004c584 00000004 b ShowExampleAppLongText(bool*)::lines
1004c588 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_window_titles
1004c589 00000001 b ImGui::ShowDemoWindow(bool*)::show_tool_metrics
1004c58a 00000001 b ImGui::ShowDemoWindow(bool*)::show_tool_debug_log
1004c58b 00000001 b ImGui::ShowDemoWindow(bool*)::show_tool_stack_tool
1004c58c 00000001 b ImGui::ShowDemoWindow(bool*)::show_tool_style_editor
1004c58d 00000001 b ImGui::ShowDemoWindow(bool*)::show_tool_about
1004c58e 00000001 b ImGui::ShowDemoWindow(bool*)::no_scrollbar
1004c58f 00000001 b ImGui::ShowDemoWindow(bool*)::no_titlebar
1004c590 00000001 b ImGui::ShowDemoWindow(bool*)::no_menu
1004c591 00000001 b ImGui::ShowDemoWindow(bool*)::no_resize
1004c592 00000001 b ImGui::ShowDemoWindow(bool*)::no_move
1004c593 00000001 b ImGui::ShowDemoWindow(bool*)::no_collapse
1004c594 00000001 b ImGui::ShowDemoWindow(bool*)::no_nav
1004c595 00000001 b ImGui::ShowDemoWindow(bool*)::no_background
1004c596 00000001 b ImGui::ShowDemoWindow(bool*)::no_bring_to_front
1004c597 00000001 b ImGui::ShowDemoWindow(bool*)::unsaved_document
1004c598 00000001 b ImGui::ShowDemoWindow(bool*)::no_close
1004c59c 00000004 b stb__dout
1004c5a0 00000004 b stb__barrier_out_e
1004c5a4 00000004 b stb__barrier_out_b
1004c5a8 00000004 b stb__barrier_in_b
1004c5ac 00000004 b ImFontAtlasGetBuilderForStbTruetype()::io
1004c5b0 0000272a b ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon()::full_ranges
1004ecdc 00002ef2 b ImFontAtlas::GetGlyphRangesJapanese()::full_ranges
10051bd0 0000009c B lastTVColBuffer
10051c6c 0000009c B lastDRCColBuffer
10051d08 00000038 b __internal_functions
10051d40 00000001 b sConfigLibInitDone
10051d44 00000004 b sAPIMenuGetStatus
10051d48 00000004 b sAPIItemDestroy
10051d4c 00000004 b sAPIItemCreateEx
10051d50 00000004 b sAPICategoryAddItem
10051d54 00000004 b sAPICategoryAddCategory
10051d58 00000004 b sAPICategoryDestroy
10051d5c 00000004 b sAPICategoryCreateEx
10051d60 00000004 b sAPIInitEx
10051d64 00000004 b sAPIGetVersion
10051d68 00000004 b sModuleHandle
10051d6c 00000004 b __wut_socket_devoptab_added
10051d70 00000004 b sHeapSize
10051d74 00000004 b sHeapMaxSize
10051d78 00000004 b sHeapBase
10051d7c 00000004 b sHeapHandle
10051d80 00000040 b sHandlers
10051dc0 00000004 b sWUMSLogWrite
10051dc4 00000004 b sModuleHandle
10051dc8 00000010 b sSendAddr
10051dd8 00000400 b sLastError
100521d8 0000002c b key_mutex
10052204 00000400 b key_table
10052608 000003b8 B __wut_fsa_device_data
100529c0 00000004 b sLibcLockUsedMask
100529c4 000002c0 b sLibcLocks
10052c84 00000004 b (anonymous namespace)::get_static_cond()::once
10052c88 0000001c b (anonymous namespace)::fake_cond
10052ca4 00000004 b (anonymous namespace)::static_cond
10052ca8 00000004 b (anonymous namespace)::get_static_mutex()::once
10052cac 0000002c b (anonymous namespace)::fake_mutex
10052cd8 00000004 b (anonymous namespace)::static_mutex
10052cdc 00000038 b (anonymous namespace)::emergency_pool
10052d14 00000004 b init
10052d18 00000008 b (anonymous namespace)::eh_globals
10052d20 00000004 b (anonymous namespace)::__new_handler
10052d24 00000004 b once_regsizes.0
10052d28 00000070 b dwarf_reg_size_table
10052d98 00000004 b once.1
10052d9c 0000002c b object_mutex
10052dc8 00000004 b seen_objects
10052dcc 00000004 b unseen_objects
10052dd0 00000400 b temp_cwd
100531d0 00000004 b __hndl_lock
100531d4 00000004 b __sfp_recursive_mutex
100531d8 00000150 B __sf
10053328 00000004 b __env_recursive_mutex
1005332c 00000004 b initial_env
10053330 00000190 B __atexit0
100534c0 00000093 R wups_meta_info_linking_order
10053554 00000019 R wups_meta_storage_id
10053570 0000000c R wups_meta_license
1005357c 00000011 R wups_meta_author
10053590 0000000d R wups_meta_version
100535a0 0000000d R wups_meta_description
100535b0 00000043 R wups_meta_info_dump
100535f4 0000000e R wups_meta_plugin_name
10053604 00000024 R wups_meta_buildtimestamp
10053628 0000000b R wups_meta_wups
10053634 00000013 R wups_meta_name
10053648 00000024 R wups_load_my_WPADRead
1005366c 00000024 R wups_load_my_VPADRead
10053690 00000024 R wups_load_my_GX2SwapScanBuffers
100536b4 00000024 R wups_load_my_GX2MarkScanBufferCopied
100536d8 00000024 R wups_load_my_GX2Init
100536fc 00000024 R wups_load_my_GX2CopyColorBufferToScanBuffer
10053720 00000024 R wups_load_my_GX2SetDRCBuffer
10053744 00000024 R wups_load_my_GX2SetTVBuffer
10053768 00000024 R wups_load_my_GX2SetupContextStateEx
1005378c 00000024 R wups_load_my_GX2SetContextState
100537b0 00000024 R wups_load_my_GX2GetCurrentScanBuffer
100537d4 00000008 R wups_hooks_on_app_starting
100537dc 00000008 R wups_hooks_deinit_plugin
100537e4 00000008 R wups_hooks_init_plugin
100537ec 00000008 R wups_hooks_init_storage
100537f4 00000008 R wups_hooks_on_fini_wut_devoptab
100537fc 00000008 R wups_hooks_on_init_wut_devoptab
10053804 00000008 R wups_hooks_wups_init_button_combo_functions
1005380c 00000008 R wups_hooks_wups_init_config_functions
10053814 00000008 R wups_hooks___fini_wrapper
1005381c 00000008 R wups_hooks___init_wrapper
10053824 00000008 R wups_hooks_on_fini_wut_stdcpp
1005382c 00000008 R wups_hooks_on_init_wut_stdcpp
10053834 00000008 R wups_hooks_on_fini_wut_newlib
1005383c 00000008 R wups_hooks_on_init_wut_newlib
10053844 00000008 R wups_hooks_on_fini_wut_sockets
1005384c 00000008 R wups_hooks_on_init_wut_sockets
10053854 00000008 R wups_hooks_on_fini_wut_malloc
1005385c 00000008 R wups_hooks_on_init_wut_malloc
c0000038 T FSAAddClient
c0000040 T FSAChangeDir
c0000048 T FSAChangeMode
c0000050 T FSACloseDir
c0000058 T FSACloseFile
c0000060 T FSADelClient
c0000068 T FSAFlushFile
c0000070 T FSAGetDeviceInfo
c0000078 T FSAGetFreeSpaceSize
c0000080 T FSAGetStat
c0000088 T FSAGetStatFile
c0000090 T FSAInit
c0000098 T FSAMakeDir
c00000a0 T FSAMount
c00000a8 T FSAOpenDir
c00000b0 T FSAOpenFileEx
c00000b8 T FSAReadDir
c00000c0 T FSAReadFile
c00000c8 T FSARemove
c00000d0 T FSARename
c00000d8 T FSARewindDir
c00000e0 T FSASetPosFile
c00000e8 T FSATruncateFile
c00000f0 T FSAUnmount
c00000f8 T FSAWriteFile
c0000100 T MEMFreeToExpHeap
c0000108 T MEMGetBaseHeapHandle
c0000110 T MEMGetSizeForMBlockExpHeap
c0000118 T OSCompareAndSwapAtomic
c0000120 T OSCompareAndSwapAtomicEx
c0000128 T OSDynLoad_Acquire
c0000130 T OSDynLoad_FindExport
c0000138 T OSFatal
c0000140 T OSGetCurrentThread
c0000148 T OSInitCond
c0000150 T OSInitMutex
c0000158 T OSInitMutexEx
c0000160 T OSLockMutex
c0000168 T OSReport
c0000170 T OSSetThreadCleanupCallback
c0000178 T OSSignalCond
c0000180 T OSSwapAtomic
c0000188 T OSUnlockMutex
c0000190 T OSWaitCond
c0000198 T __rplwrap_exit
c00001b0 T GX2CalcFetchShaderSizeEx
c00001b8 T GX2CalcSurfaceSizeAndAlignment
c00001c0 T GX2DrawIndexedEx
c00001c8 T GX2Flush
c00001d0 T GX2InitFetchShaderEx
c00001d8 T GX2InitSampler
c00001e0 T GX2InitTextureRegs
c00001e8 T GX2Invalidate
c00001f0 T GX2RUnlockBufferEx
c00001f8 T GX2SetAttribBuffer
c0000200 T GX2SetBlendControl
c0000208 T GX2SetColorBuffer
c0000210 T GX2SetColorControl
c0000218 T GX2SetCullOnlyControl
c0000220 T GX2SetDepthOnlyControl
c0000228 T GX2SetFetchShader
c0000230 T GX2SetPixelSampler
c0000238 T GX2SetPixelShader
c0000240 T GX2SetPixelTexture
c0000248 T GX2SetScissor
c0000250 T GX2SetVertexShader
c0000258 T GX2SetVertexUniformReg
c0000260 T GX2SetViewport
c0000290 T htonl
c0000298 T htons
c00002a0 T socket_lib_init
c00002a8 T __rplwrap_recv
c00002b0 T __rplwrap_send
c00002b8 T __rplwrap_sendto
c00002c0 T __rplwrap_setsockopt
c00002c8 T __rplwrap_shutdown
c00002d0 T __rplwrap_socket
c00002d8 T __rplwrap_socketclose
c00002e0 T __rplwrap_socketlasterr
c0000300 T VPADGetTPCalibratedPoint
c0000328 R MEMAllocFromDefaultHeapEx
c0000330 R MEMFreeToDefaultHeap
c0000380 R MEMAllocFromMappedMemoryEx
c0000388 R MEMFreeToMappedMemory
c0000390 R MEMAllocFromMappedMemoryForGX2Ex
